{"version":3,"sources":["play-dropdown-menu-button.js","play-dropdown-menu-list.js","play-dropdown-menu.js","header.js","footer.js","keys.js","map-screen/search-box.js","home-screen/search-button.js","home-screen/add-button.js","home-screen/found-button.js","home-screen.js","about-screen.js","map-screen/item-info-window.js","map-screen/item-marker.js","map-screen/search-map.js","map-screen/search-map-container.js","map-screen/current-location-button.js","map-screen/filter-map-buttons.js","search-map-screen.js","add-item-screen/generate-id.js","add-item-screen/add-item-fetch.js","add-item-screen/new-hint.js","add-item-screen/hint-listing.js","add-item-screen.js","item-details-screen/image-link-error-message.js","item-details-screen/item-detail-map.js","item-details-screen/item-details-status-container.js","item-details-screen/item-details-hints.js","item-details-screen/item-details-form.js","item-details-screen.js","item-description-button.js","submission-successful-screen.js","found-items-screen/found-item-fetch.js","found-items-screen/find-item-fetch.js","found-items-screen.js","found-successful-screen/update-comment-fetch.js","found-successful-screen.js","not-found-screen.js","router.js","reducer.js","store.js","index.js"],"names":["PlayDropDownMenuButton","props","react_default","a","createElement","onClick","event","preventDefault","showMenu","className","PlayDropDownMenuList","NavLink","to","PlayDropdownMenu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","closeMenu","setState","document","removeEventListener","play_dropdown_menu_button","addEventListener","play_dropdown_menu_list","React","Component","Header","play_dropdown_menu","Footer","keys","GOOGLE_MAPS_API_KEY","GOOGLE_PLACES_API_KEY","PlacesWithStandaloneSearchBox","compose","withProps","googleMapURL","concat","loadingElement","style","height","containerElement","lifecycle","componentWillMount","refs","places","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","lat","geometry","location","lng","dispatch","type","withScriptjs","data-standalone-searchbox","StandaloneSearchBox","bounds","placeholder","connect","SearchButton","Link","AddButton","FoundButton","HomeScreen","header","search_box","search_button","add_button","found_button","footer","AboutScreen","class","ItemInfoWindowContent","styles","background","item","image","backgroundSize","title","item_found","id","ItemMarker","toggleOpen","isOpen","closeMarkers","itemId","activeMarker","nextProps","lib","position","maxWidth","maxHeight","defaultPosition","onCloseClick","onToggleOpen","item_info_window","SearchMap","withGoogleMap","markers","items","map","item_marker","key","closeOtherMarkers","Number","defaultZoom","center","SearchMapContainer","search_map","width","boxShadow","mapElement","currentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","FilterMapButtons","fetchAllItems","fetchHiddenItems","fetchFoundItems","SearchMapScreen","route","fetch","process","then","res","json","data","fetchRequest","_this3","search_map_container","current_location_button","filter_map_buttons","generateId","alphabet","i","charAt","Math","floor","random","length","newItemBody","found_code","body","hints","updateStoreIdAndFoundCode","method","JSON","stringify","headers","Content-Type","Accept","foundCode","addItemFetch","NewHintForm","hint","maxLength","value","onChange","target","hideNoHintsMessage","addNewHint","MAX_SAFE_INTEGER","toString","HintListings","removeHint","reverse","AddItemScreen","currentHint","showNoHintsMessage","code","updateStoreFoundCode","history","push","onSubmit","required","new_hint","newHints","toConsumableArray","hint_listing","oldHint","filter","ImageLinkErrorMessage","ItemDetailScreenMapContainer","src","frameBorder","border","allowFullScreen","ItemDetailsStatusContainer","backgroundImage","found_comment","ItemDetailsHints","ItemDetailsForm","item_details_status_container","item_detail_map","item_details_hints","ItemDetailsScreen","urlId","match","params","image_link_error_message","item_details_form","ItemDescriptionButton","SubmissionSuccessfulScreen","item_description_button","foundItemFetch","updateItemId","found","findItemFetch","invalidFoundCode","clearMessage","itemAlreadyFound","FoundItemsScreen","message","alreadyFound","updateCommentFetch","comment","updateCommentSubmitted","FoundSuccessfulScreen","commentSubmitted","NotFoundScreen","Router","HashRouter","Switch","Route","exact","path","component","reducers","UPDATE_LOCATION","oldState","action","objectSpread","UPDATE_ITEM_ID","UPDATE_ITEMS","UPDATE_FOUND_CODE","reducer","doer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","app","es","router","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.44e621ae.chunk.js","sourcesContent":["import React from 'react';\n\nlet PlayDropDownMenuButton = (props) =>\n    <div\n        onClick={event => {\n            event.preventDefault();\n            props.showMenu();\n        }}>\n            Let's play! <i className=\"fas fa-angle-down\" />\n    </div>\n\nexport default PlayDropDownMenuButton;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nlet PlayDropDownMenuList = () =>\n    <ul className='play-dropdown-menu-list'>\n        <li className='dropdown-list-item'>\n            <NavLink to='/search' className='dropdown-link'>Search Joys</NavLink>\n        </li>\n        <li className='dropdown-list-item'>\n            <NavLink to='/add' className='dropdown-link'>Add Joy</NavLink>\n        </li>\n        <li className='dropdown-list-item'>\n            <NavLink to='/found' className='dropdown-link'>Found Joys</NavLink>\n        </li>\n    </ul>\n\nexport default PlayDropDownMenuList;","import React from 'react';\nimport PlayDropDownMenuButton from './play-dropdown-menu-button';\nimport PlayDropDownMenuList from './play-dropdown-menu-list';\n\nclass PlayDropdownMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showMenu: false,\n        }\n    }\n\n    render() {   \n        let showMenu = () => {\n            this.setState({ showMenu: true }, () => {\n                document.addEventListener('click', closeMenu);\n            });\n        };\n\n        let closeMenu = () => {\n            this.setState({ showMenu: false }, () => {\n                document.removeEventListener('click', closeMenu);\n            });\n        };\n\n        return (\n            <div className='play-dropdown-menu header-navigation-item'>\n                <PlayDropDownMenuButton showMenu={showMenu} />\n                { this.state.showMenu ? <PlayDropDownMenuList /> : null }\n            </div>\n        )\n    };\n};\n\nexport default PlayDropdownMenu;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PlayDropdownMenu from './play-dropdown-menu';\n\nlet Header = () =>\n    <div className='header'>\n        <NavLink to='/' className='header-navigation-item'>\n            <p className=\"logo\">Hidden Joys <i className=\"far fa-smile\"></i></p>\n        </NavLink>\n        <div className='header-right'>\n            <NavLink to='/about' className='header-navigation-item'>\n                <p className='header-navigation-item'>About</p>\n            </NavLink>\n            <PlayDropdownMenu />\n        </div>\n    </div>\n\nexport default Header;","import React from 'react';\n\nlet Footer = () =>\n    <div className='footer'></div>\n\nexport default Footer;","let keys = {\n    GOOGLE_MAPS_API_KEY: 'AIzaSyA8k8P5d3IBAP6nWRI2HvcoWQNESD27Poc',\n    GOOGLE_PLACES_API_KEY: 'AIzaSyDaZi85qJWkgNDjFp5yfedJ47WOPCYjD5M'\n }\n \n export default keys;","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { withScriptjs } from \"react-google-maps\";\nimport { compose, withProps, lifecycle } from 'recompose';\nimport keys from '../keys';\nimport { StandaloneSearchBox } from \"react-google-maps/lib/components/places/StandaloneSearchBox\";\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${keys.GOOGLE_MAPS_API_KEY}&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {}\n      this.setState({\n        places:[],\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();\n          this.setState({\n            places,\n          });\n          let lat = this.state.places[0].geometry.location.lat();\n          let lng = this.state.places[0].geometry.location.lng();\n          this.props.dispatch({\n            type: 'UPDATE_LOCATION',\n            location:{lat,lng}\n          })\n        },\n      })\n    },\n  }),\n  withScriptjs\n)(props => \n  <div data-standalone-searchbox=\"\" className=\"search-box-container\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input className='search-box home-search-box'\n        type=\"text\"\n        placeholder=\"Search Places\"\n      />\n    </StandaloneSearchBox>\n  </div>\n);\n\nexport default connect(\n  state => ({lat:state.lat, lng:state.lng})\n)(PlacesWithStandaloneSearchBox);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet SearchButton = () =>\n    <Link to=\"/search\" className='max-height'>\n        <button className=\"search-button\">\n            <i className=\"fas fa-search\"></i>\n        </button>\n    </Link>\n\nexport default SearchButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet AddButton = () =>\n    <Link to=\"/add\">\n        <button className=\"navigation-button\">\n            <i className=\"fas fa-plus circle add-icon\"></i> Add Joy\n        </button>\n    </Link>\n\nexport default AddButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet FoundButton = () =>\n    <Link to=\"/found\">\n        <button className=\"navigation-button\">\n            <i className=\"far fa-grin-beam\"></i> Found Joys\n        </button>\n    </Link>\n\nexport default FoundButton;","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport SearchBox from './map-screen/search-box';\nimport SearchButton from './home-screen/search-button';\nimport AddButton from './home-screen/add-button';\nimport FoundButton from './home-screen/found-button';\nimport './stylesheets/home-screen.css';\n\nlet HomeScreen = () =>\n    <div className=\"full-screen\">\n        <Header />\n        <div className=\"screen home-screen\">\n            <h1 className=\"main-title\">Hidden Joys</h1>\n            <div className=\"search-container\">\n                <div className='home-search-box-wrapper'>\n                    <SearchBox />\n                </div>\n                <SearchButton />\n            </div>\n            <div className=\"navigation-btns-container\">\n                <AddButton />\n                <FoundButton />\n            </div>\n        </div>\n        <Footer />\n    </div>\n\nexport default HomeScreen;","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport './stylesheets/about-screen.css';\n\nlet AboutScreen = () =>\n    <div className='full-screen'>\n        <Header />\n            <div className='screen center-div success-image-background'>\n                <div className='add-item-form'>\n                    <div className='form-header center-div'>\n                        <h3 className='form-title found-title'>About</h3>\n                    </div>\n                    <hr />\n                    <div className='about-form-body'>\n                        <div className='form-section'>\n                            <p className='form-text'><span className='about-text-title'>Hidden Joys</span> was made for people who want to share a little piece of positivity in the world by creating a mini piece of art or a kind note/message and hiding it out there for someone else to find. </p>\n                            <p className='form-text'>We believe in creating joy for others by lifting them up, putting a smile on their faces, and having a little fun in the process! <i class=\"far fa-laugh-beam\"/></p>\n                        </div>\n                    </div>\n                    <hr />\n                    <div className='about-form-footer center-div'>\n                        <p className='about-form-text'>Adding a bit of joy and whimsy to your day! <i className=\"far fa-smile-wink\"/></p>\n                    </div>\n                </div>\n            </div>\n        <Footer />\n    </div>\n\nexport default AboutScreen;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/map-styling.css';\n\nlet ItemInfoWindowContent = (props) => {\n    let styles = {\n        background: `url(${props.item.image})`,\n        backgroundSize: 'cover'\n    };\n\n    return (\n        <div className='info-window-container'>\n            <div className='info-window-section'>\n                <div className='info-window-image' style={styles}></div>\n            </div>\n            <div className='info-window-section'>\n                <p className='info-window-title'>{props.item.title}</p>\n                <p className='info-window-status'>Status: {props.item.item_found ? 'Found' : 'Not Found'}</p>\n                <Link to={`/items/${props.item.id}`} >\n                    <p className='info-window-link'>Item Details</p>\n                </Link>\n            </div>\n        </div>\n    )\n};\n\nexport default ItemInfoWindowContent;","import React from 'react';\nimport { Marker, InfoWindow } from 'react-google-maps';\nimport ItemInfoWindowContent from './item-info-window';\n\nclass ItemMarker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            activeMarker: this.props.activeMarker\n        }\n    }\n    toggleOpen = () => {\n        this.setState({isOpen: !this.state.isOpen}, () => {\n            if (!this.state.isOpen) {\n                this.setState({activeMarker: false}, () => {\n                    this.props.closeMarkers(null)\n                })\n            } else {\n                this.props.closeMarkers(this.props.itemId)\n            }\n        })\n    };\n    componentWillReceiveProps(nextProps) {\n        this.setState({activeMarker: nextProps.activeMarker})\n    };\n    render() {\n        return (\n            <div>\n                <Marker\n                    onClick={this.toggleOpen}\n                    position={this.props.location}\n                >\n                { this.state.isOpen && this.state.activeMarker ?\n                    <InfoWindow maxWidth={800} maxHeight={800} defaultPosition={ this.props.location } onCloseClick={this.props.onToggleOpen}>\n                        <ItemInfoWindowContent item={this.props.item}/>\n                    </InfoWindow> : null\n                }\n                </Marker>\n            </div>\n        )\n    }\n};\n\nexport default ItemMarker;","import React from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport ItemMarker from './item-marker';\n\nconst SearchMap = withScriptjs(withGoogleMap((props) =>  {\n    let markers = props.items.map( item => \n            <ItemMarker \n                key={item.id}\n                itemId={item.id}\n                closeMarkers={props.closeOtherMarkers}\n                item={item}\n                location={{lat:Number(item.lat), lng:Number(item.lng)}}\n                activeMarker={item.id === props.activeMarker ? true : false}\n            />\n        )\n    return (\n        <GoogleMap\n            defaultZoom={14}\n            center={ props.location }\n        >\n        {markers}\n        </GoogleMap>\n    )\n}));\n\nexport default SearchMap;","import React from \"react\";\nimport SearchMap from './search-map';\nimport keys from '../keys';\n\nclass SearchMapContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            location: this.props.location,\n            activeMarker: null\n        };\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.items !== this.props.items) {\n            this.setState({\n                items: nextProps.items,\n                location: nextProps.location\n            });\n        };\n    };\n\n    closeOtherMarkers = (itemId) => this.setState({activeMarker: itemId});\n\n    render() {\n        return (\n            <SearchMap \n                items={this.props.items}\n                location={this.props.location}\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${keys.GOOGLE_MAPS_API_KEY}&v=3.exp&libraries=geometry,drawing,places`}\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `100%`, width: `100%`, boxShadow: `var(--box-shadow)` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n                activeMarker={this.state.activeMarker}\n                closeOtherMarkers={this.closeOtherMarkers}\n            />\n        )\n    }\n};\n\nexport default SearchMapContainer;","import React from 'react';\nimport { connect } from 'react-redux';\n\nlet CurrentLocationButton = (props) => \n    <button \n        className='current-location-button'\n        onClick={event => {\n            event.preventDefault();\n            navigator.geolocation.getCurrentPosition(position => {\n                let pos = {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                };\n                props.dispatch({\n                    type: 'UPDATE_LOCATION',\n                    location:{lat:pos.lat, lng:pos.lng}\n                });\n            });\n        }\n        }\n    ><i className='fas fa-map-marker-alt icon'></i> Current</button>\n\nexport default connect(\n    state => ({\n        lat: state.lat,\n        lng: state.lng,\n        currentLocation: state.currentLocation\n    })\n)(CurrentLocationButton);","import React from 'react';\n\nlet FilterMapButtons = (props) =>\n    <div className='filter-map-buttons'>\n        <button \n            className='all-filter filter-button'\n            onClick={event => {\n                event.preventDefault();\n                props.fetchAllItems();\n            }}>All\n        </button>\n        <button \n            className='not-found-filter filter-button'\n            onClick={event => {\n                event.preventDefault();\n                props.fetchHiddenItems();\n            }}>Not Found\n        </button>\n        <button\n            className='found-filter filter-button'\n            onClick={event => {\n                event.preventDefault();\n                props.fetchFoundItems();\n            }}>Found\n        </button>\n    </div>\n\nexport default FilterMapButtons;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from './header';\nimport Footer from './footer';\nimport SearchMapContainer from './map-screen/search-map-container';\nimport PlacesWithStandaloneSearchBox from './map-screen/search-box';\nimport CurrentLocationButton from './map-screen/current-location-button';\nimport FilterMapButtons from './map-screen/filter-map-buttons';\nimport './stylesheets/map-styling.css';\n\nclass SearchMapScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: {lat:this.props.lat, lng: this.props.lng}\n        }\n    };\n\n    fetchRequest(route) {\n        fetch(process.env.REACT_APP_API_URL + route)\n        .then(res => res.json())\n        .then(items => {\n            this.props.dispatch({\n                type: 'UPDATE_ITEMS',\n                items: items.data\n            })\n        });\n    }\n\n    componentDidMount() {\n        this.fetchRequest('/items')\n    };\n\n    render() {\n        let fetchAllItems = () => this.fetchRequest('/items');\n        let fetchHiddenItems = () => this.fetchRequest('/items/hidden');\n        let fetchFoundItems = () => this.fetchRequest('/items/found');\n\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen center-div success-image-background\">\n                    <div className='search-map-screen-container'>\n                        <div className='desktop-map'>\n                            <div className='search-map-container desktop-map-container'>\n                                <SearchMapContainer\n                                    location={ {lat: this.props.lat, lng: this.props.lng } }\n                                    items={this.props.items}\n                                />\n                            </div>\n                        </div>\n                        <div className='search-map-screen-main'>\n                            <div className='search-map-screen-container-section'>\n                                <p className='map-screen-section-title'>Search By Location</p>\n                                <div className='map-search-btns-container'>\n                                    <CurrentLocationButton />\n                                    <p className='separator-text'>OR</p>\n                                    <div className='map-search-box-container'>\n                                        <PlacesWithStandaloneSearchBox />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='search-map-screen-container-section'>\n                                <p className='map-screen-section-title'>Filter By Items</p>\n                                <FilterMapButtons \n                                    fetchAllItems={fetchAllItems}\n                                    fetchHiddenItems={fetchHiddenItems}\n                                    fetchFoundItems={fetchFoundItems}\n                                />\n                            </div>\n                            <div className='search-map-screen-container-section map-section'>\n                                <div className='search-map-container'>\n                                    <SearchMapContainer\n                                        location={ {lat: this.props.lat, lng: this.props.lng } }\n                                        items={this.props.items}\n                                    />\n                                </div>\n                            </div>\n                            <div className='search-map-screen-container-section'>\n                                <div className='form-btns-container'>\n                                    <Link to='/add'><button className='search-form-button'>Add Joy</button></Link>\n                                    <Link to='/found'><button className='search-form-button'>Found Joy</button></Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        )\n    }\n};\n\nexport default connect(\n    state => ({lat: state.lat, lng: state.lng, items: state.items})\n)(SearchMapScreen);","let generateId = () => {\n    const alphabet = '23456789abdegjkmnpqrvwxyz';\n    let id_length = 10;\n    let id = '';\n    for (let i = 0; i < id_length; i++) {\n        id += alphabet.charAt(Math.floor(Math.random() * alphabet.length));\n    }\n    return id;\n};\n\nexport default generateId;","import generateId from './generate-id';\n\nlet newItemBody = (state, lat, lng) => ({\n    title: state.title,\n    lat: lat,\n    lng: lng,\n    image: state.image,\n    found_code: generateId(),\n});\n\nlet fetchRequest = (body, hints, updateStoreIdAndFoundCode) => {\n    fetch(`${process.env.REACT_APP_API_URL}/items`, {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(res => res.json())\n    .then(data => {\n        let itemId = data[0].id;\n        let foundCode = data[0].found_code;\n        let body = {itemId, hints};\n        fetch(`${process.env.REACT_APP_API_URL}/hints`, {\n            method: 'POST',\n            body: JSON.stringify(body),\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }).then(() => {\n            updateStoreIdAndFoundCode(itemId, foundCode);\n        })\n    })\n};\n\nlet addItemFetch = (state, props, updateStoreIdAndFoundCode) => {\n    if (state.location === 'current') {\n        navigator.geolocation.getCurrentPosition(position => {\n            let lat = position.coords.latitude;\n            let lng = position.coords.longitude;\n            let body = newItemBody(state, lat, lng);\n            fetchRequest(body, state.hints, updateStoreIdAndFoundCode);\n        });\n    } else {\n        let body = newItemBody(state, props.lat, props.lng);\n        fetchRequest(body, state.hints, updateStoreIdAndFoundCode);\n    }\n};\n\nexport default addItemFetch;","import React from 'react';\n\nclass NewHintForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hint: ''\n        };\n    };\n    render() {\n        let generateId = () => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString();\n        return (\n            <div className='new-hint-container'>\n                <input\n                    className='input-box fill-height'\n                    type='text'\n                    maxLength='50'\n                    value={this.state.hint}\n                    onChange={event => {\n                        this.setState({hint: event.target.value})\n                    }}\n                />\n                <button\n                    className='add-hint-button fill-height'\n                    onClick={event => {\n                        event.preventDefault();\n                        this.props.hideNoHintsMessage();\n                        this.props.addNewHint({id: generateId(), hint: this.state.hint});\n                        this.setState({hint: ''});\n                    }}\n                >+</button>\n            </div>\n        )\n    }\n};\n\nexport default NewHintForm;","import React from 'react';\n\nlet HintListings = (props) => \n    <div className='hint-listings'>\n        {props.hints.map(hint => \n            <div className='hint-listing' key={hint.id}>\n                <div className='hl-text-wrapper'>\n                    <p className='hint-listing-text'>{hint.hint}</p>\n                </div>\n                <div className='hl-btn-wrapper'>\n                    <button\n                        className='form-button'\n                        onClick={() => {\n                            props.removeHint(hint)\n                        }}\n                    >-</button>\n                </div>\n            </div>\n        ).reverse()}\n    </div>\n\nexport default HintListings;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './header';\nimport Footer from './footer';\nimport SearchBox from './map-screen/search-box';\nimport addItemFetch from './add-item-screen/add-item-fetch';\nimport NewHintForm from './add-item-screen/new-hint';\nimport HintListings from './add-item-screen/hint-listing';\nimport './stylesheets/add-item-screen.css';\n\nclass AddItemScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentHint: '',\n            title: '',\n            location:'current',\n            image: 'https://source.unsplash.com/_0aKQa9gr4s/',\n            hints: [],\n            showNoHintsMessage: false\n        }\n    };\n\n    componentDidMount() {\n        this.props.dispatch({\n            type: 'UPDATE_ITEM_ID',\n            itemId: ''\n        });\n        this.props.dispatch({\n            type: 'UPDATE_FOUND_CODE',\n            foundCode: ''\n        });\n    };\n\n    render() {\n        let updateStoreItemId = (id) => {\n            this.props.dispatch({\n                type: 'UPDATE_ITEM_ID',\n                itemId: id\n            });\n        };\n\n        let updateStoreFoundCode = (code) => {\n            this.props.dispatch({\n                type: 'UPDATE_FOUND_CODE',\n                foundCode: code\n            });\n        };\n\n        let updateStoreIdAndFoundCode = (itemId, code) => {\n            updateStoreItemId(itemId);\n            updateStoreFoundCode(code);\n            this.props.history.push(`/submit-success`);\n        };\n\n        let addNewHint = (hint) => {\n            let newHints = [...this.state.hints, hint]\n            this.setState({hints: newHints}) \n        };\n\n        let removeHint = (oldHint) => {\n            let newHints = this.state.hints.filter(hint => hint.id !== oldHint.id);\n            this.setState({hints: newHints});\n        };\n\n        let hideNoHintsMessage = () => this.setState({showNoHintsMessage: false});\n\n        let submitForm = () => {\n            if (this.state.hints.length === 0 ) {\n                this.setState({showNoHintsMessage: true});\n            } else {\n                addItemFetch(this.state, this.props, updateStoreIdAndFoundCode);\n            }\n        };\n\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className='screen center-div success-image-background'>\n                    <form \n                    className='add-item-form'\n                    onSubmit={event => {\n                        event.preventDefault();\n                        submitForm();\n                    }}>\n                        <div className='form-header center-div'>\n                            <p className='form-title'>Hide New Item</p>\n                        </div>\n                        <hr/>\n                        <div className='form-body'>\n                            <div className='form-section'>\n                                <p className='form-section-title'>Title</p>\n                                <input \n                                    className='input-box'\n                                    type='text'\n                                    required\n                                    maxLength='50'\n                                    value={this.state.title}\n                                    onChange={event => {\n                                        this.setState({title: event.target.value})\n                                    }}\n                                />\n                            </div>\n                            <div className='form-section'>\n                                <p className='form-section-title'>Location</p>\n                                <select \n                                    className='input-box'\n                                    value={this.state.location}\n                                    onChange={event => {\n                                        this.setState({location:event.target.value})\n                                    }}>\n                                    <option value='current'>Use Current Location</option>\n                                    <option value='search'>Search By Location</option>\n                                </select>\n                                {this.state.location === 'current' ? <p></p> : \n                                <div className='add-item-search-box-wrapper'>\n                                    <p className='form-section-title'>Enter Location:</p>\n                                    <SearchBox />\n                                </div>}\n                            </div>\n                            <div className='form-section'>\n                                <p className='form-section-title'>Image/url</p>\n                                <input \n                                    className='input-box'\n                                    type='text'\n                                    required\n                                    maxLength='155'\n                                    value={this.state.image}\n                                    onChange={event => {\n                                        this.setState({image: event.target.value})\n                                    }}\n                                />\n                            </div>\n                            <div className='form-section'>\n                                <p className='form-section-title'>Hints</p>\n                                <NewHintForm addNewHint={addNewHint} hideNoHintsMessage={hideNoHintsMessage}/>\n                                {this.state.showNoHintsMessage \n                                    ? <p className='no-hints-message'>Please Provide a Hint!!!</p>\n                                    : <HintListings hints={this.state.hints} removeHint={removeHint}/>\n                                }\n                            </div>\n                        </div>\n                        <hr/>\n                        <div className='form-footer center-div'>\n                            <button type='submit' className='submit-button'>Submit</button>\n                        </div>\n                    </form>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};\n\nexport default connect(\n    state => ({lat: state.lat, lng: state.lng})\n)(AddItemScreen);","import React from 'react';\n\nlet ImageLinkErrorMessage = () =>\n    <div className='image-link-error-container'>\n        <div>BAD URL</div>\n    </div>\n\nexport default ImageLinkErrorMessage;","import React from 'react';\n\nlet ItemDetailScreenMapContainer = (props) => \n    <div className='item-detail-map-container'>\n        <iframe title={props.id} src={`https://www.google.com/maps/embed?pb=!1m21!1m12!1m3!1d3356.8829468635663!2d${props.lng}!3d${props.lat}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!4m6!3e6!4m0!4m3!3m2!1d${props.lat}!2d${props.lng}!5e0!3m2!1sen!2sus!4v1539189750210`} width=\"100%\" height=\"100%\" frameBorder=\"0\" style={{border:\"0\"}} allowFullScreen></iframe>\n    </div>\n\nexport default ItemDetailScreenMapContainer;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet ItemDetailsStatusContainer = (props) =>\n    <div className='item-detail-body-section status-wrapper'>\n        <div \n            className='item-detail-image-container'\n            style={{\n                backgroundImage:`url(${props.item.image}`,\n                backgroundSize:'cover'\n            }}\n        ></div>\n        <div className='item-detail-status-section'>\n            <p className='item-details-section-title'>Status:</p>\n            {props.item.item_found ?\n            <div className='status-display-container'>\n                <p className='item-details-status-text'>Item Found!</p>\n                <div className='status-comment-container'>\n                    <p className='status-comment-font'>{props.item.found_comment}</p>\n                </div>\n            </div> :\n            <div className='status-display-container'>\n                <p className='item-details-status-text'>Item still hidden!</p>\n                <div className='status-comment-container'>\n                    <Link to='/found'><button className='detail-screen-button'>Found</button></Link>\n                </div>\n            </div>\n            }\n        </div>\n    </div>\n\nexport default ItemDetailsStatusContainer;","import React from 'react';\n\nlet ItemDetailsHints = (props) => \n    <div className='item-detail-body-section'>\n        <p className='item-details-section-title'>Hints</p>\n        <div className='hints-container'>\n            {props.hints.map(hint =>\n                <p className='item-detail-hint-listing' key={hint.id}>{hint.hint}</p>    \n            )}\n        </div>\n    </div>\n\nexport default ItemDetailsHints;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ItemDetailsStatusContainer from './item-details-status-container';\nimport ItemDetailScreenMapContainer from './item-detail-map';\nimport ItemDetailsHints from './item-details-hints';\n\nlet ItemDetailsForm = (props) => \n    <div className='item-detail-form'>\n        <div className='item-detail-form-header center-div'>\n            <h3 className='item-detail-title'>{`${props.item.title}`}</h3>\n        </div>\n        <hr/>\n        <div className='item-detail-form-body'>\n            <ItemDetailsStatusContainer item={props.item}/>\n            <div className='item-detail-body-section'>\n                <div className='mobile-map-display'>\n                    <ItemDetailScreenMapContainer lat={props.item.lat} lng={props.item.lng}/>\n                </div>\n            </div>\n            <ItemDetailsHints hints={props.hints}/>\n        </div>\n        <hr/>\n        <div className='item-detail-form-footer center-div'>\n            <Link to='/add'><button className='detail-screen-button'>Add</button></Link>\n            <Link to='/search'><button className='detail-screen-button'>Search</button></Link>\n        </div>\n    </div>\n\nexport default ItemDetailsForm;","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport ImageLinkErrorMessage from './item-details-screen/image-link-error-message';\nimport ItemDetailScreenMapContainer from './item-details-screen/item-detail-map';\nimport ItemDetailsForm from './item-details-screen/item-details-form';\nimport './stylesheets/item-details-screen.css';\n\nclass ItemDetailsScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            urlId: '',\n            item: '',\n            hints: []\n        };\n    };\n\n    componentDidMount() {\n        let urlId = this.props.match.params.id;\n        fetch(`${process.env.REACT_APP_API_URL}/items/${urlId}`)\n        .then(res => res.json())\n        .then(data => {\n            this.setState({item: data.data});\n            this.setState({urlId: urlId});\n            fetch(`${process.env.REACT_APP_API_URL}/items/${urlId}/hints`)\n            .then(res => res.json())\n            .then(data => this.setState({hints: data.data}))\n        })\n    };\n\n    render() {\n        return (\n            <div className='full-screen'>\n                <Header />\n                <div className='screen success-image-background center-div'>\n                    {this.state.item === 'Error' ? \n                        <ImageLinkErrorMessage />:\n                        <div className='item-details-container'>\n                            <div className='desktop-map-display'>\n                                <ItemDetailScreenMapContainer \n                                    lat={this.state.item.lat} \n                                    lng={this.state.item.lng} \n                                    title={this.state.item.id}\n                                />\n                            </div>\n                            <ItemDetailsForm \n                                item={this.state.item} \n                                hints={this.state.hints}\n                            />\n                        </div>\n                    }\n                </div>\n                <Footer />\n            </div>\n        )\n    }\n};\n\nexport default ItemDetailsScreen;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet ItemDescriptionButton = (props) => \n    <Link to={`/items/${props.id}`}>\n        <button className='form-button'>View Item Description</button>\n    </Link>\n    \n\nexport default ItemDescriptionButton;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from './header';\nimport Footer from './footer';\nimport ItemDescriptionButton from './item-description-button';\nimport './stylesheets/add-item-screen.css';\nimport './stylesheets/submission-successful-screen.css';\n\nclass SubmissionSuccessfulScreen extends React.Component {\n    render() {\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen center-div success-image-background\">\n                    <div className='add-item-form'>\n                        <div className='submit-success-form-header center-div'>\n                            <p className='form-title'>Thank You!!!</p>\n                        </div>\n                        <div className='submit-success-form-body'>\n                            <div className='submit-success-form-section'>\n                                <p className='form-text'>Thank you very much for adding some joy into the world! <i className=\"far fa-grin-beam\"></i></p>  \n                            </div>\n                            <div className='submit-success-form-section'>\n                                <p className='form-text'>Your item id is:</p>\n                                    <div className='input-box id-box'>\n                                        <p className='id-text'>{this.props.foundCode}</p>\n                                    </div>\n                                </div>\n                            <div className='submit-success-form-section'>\n                                <p className='form-text'>Please include this id when hiding your item of joy so that others can let us know when they have found the item!</p>\n                            </div>\n                            <div className='submit-success-form-section'>\n                                <ItemDescriptionButton id={this.props.itemId}/>\n                            </div>\n                            <div className='form-btns-container'>\n                                <Link to='/add'><button className='form-button'>Add Joy</button></Link>\n                                <Link to='/search'><button className='form-button'>Find Joy</button></Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};  \n\nexport default connect(\n    state => ({itemId: state.itemId, foundCode: state.foundCode})\n)(SubmissionSuccessfulScreen);","let foundItemFetch = (item, updateItemId) => {\n    fetch(`${process.env.REACT_APP_API_URL}/items/${item.id}/found`, {\n        method: 'PUT',\n        body: JSON.stringify({ id: item.id, found: true }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    })\n    .then(() => {\n        updateItemId(item.id);\n    }) \n};\n\nexport default foundItemFetch;","import foundItemFetch from './found-item-fetch';\n\nlet findItemFetch = (foundCode, invalidFoundCode, clearMessage, updateItemId, itemAlreadyFound) => {\n    fetch(`${process.env.REACT_APP_API_URL}/codes/${foundCode}`)\n    .then(res => res.json())\n    .then(data => {\n        if (data.data === 'Error') {\n            invalidFoundCode();\n        }\n        else {\n            clearMessage();\n            data.data.item_found \n            ? itemAlreadyFound(data.data.id)\n            : foundItemFetch(data.data, updateItemId);\n        }\n    });\n};\n\nexport default findItemFetch;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './header';\nimport Footer from './footer';\nimport findItemFetch from './found-items-screen/find-item-fetch';\nimport ItemDescriptionButton from './item-description-button';\nimport './stylesheets/found-items-screen.css';\n\nclass FoundItemsScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            id: '',\n            message: '',\n            foundCode: '',\n            alreadyFound: false\n        }\n    }\n\n    render() {\n        let invalidFoundCode = () => {\n            this.setState({ foundCode: '' });\n            this.setState({alreadyFound: false});\n            this.setState({ message: 'Invalid Id' });\n        };\n\n        let clearMessage = () =>\n            this.setState({ message: '' });\n\n        let updateItemId = (id) => {\n            this.props.dispatch({\n                type: 'UPDATE_ITEM_ID',\n                itemId: id\n            });\n            this.props.history.push(`/found-success`);\n        };\n\n        let itemAlreadyFound = (itemId) => {\n            this.setState({alreadyFound: true});\n            this.props.dispatch({\n                type: 'UPDATE_ITEM_ID',\n                itemId: itemId\n            });\n            this.setState({foundCode: ''});\n        };\n\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen center-div success-image-background\">\n                    <form \n                        className=\"found-items-form\"\n                        onSubmit={event => {\n                            event.preventDefault();\n                            findItemFetch(this.state.foundCode, invalidFoundCode, clearMessage, updateItemId, itemAlreadyFound);\n                    }}>\n                        <div className='center-div'>\n                            <p className='form-title found-title'>Did you find some joy? <i className=\"far fa-smile-wink\"></i></p>\n                        </div>\n                        <div className='found-items-form-body'>\n                            <div className='form-section'>\n                                <p className='form-text'>Wooo! That's super awesome!</p>\n                                <p className='form-text'>To mark your piece of joy as found, find the id attached to your joy and enter it below.</p>\n                            </div>\n                            <div className='found-items-form-section'>\n                                <p className='form-section-title'>Enter joy id:</p>\n                                <div className='search-id-form-section'>\n                                    <input \n                                        className='search-id-input-box'\n                                        required\n                                        type='text'\n                                        value={this.state.foundCode}\n                                        onChange={event => {\n                                            this.setState({foundCode: event.target.value})\n                                        }} \n                                    />\n                                    <button \n                                        className='form-button search-items-button' \n                                        type=\"submit\">Found!\n                                    </button>\n                                </div>\n                            </div>\n                            <div className='form-section'>\n                                {this.state.alreadyFound\n                                    ? <div className='form-section already-found-container'>\n                                        <p className='form-section-title'>Item has already been found!</p>\n                                        <ItemDescriptionButton id={this.props.itemId}/>\n                                    </div>\n                                    : <p className='form-section-title'>{this.state.message}</p>\n                                }\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};\n\nexport default connect(\n    state => ({ itemId: state.itemId, foundCode: state.foundCode })\n)(FoundItemsScreen);","let updateCommentFetch = (comment, id, updateCommentSubmitted) =>\n    fetch(process.env.REACT_APP_API_URL + '/items/' + id + '/comment', {\n        method: 'PUT',\n        body: JSON.stringify({ id: id, comment: comment }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    })\n    .then(() => updateCommentSubmitted())\n\nexport default updateCommentFetch;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from './header';\nimport Footer from './footer';\nimport ItemDescriptionButton from './item-description-button';\nimport updateCommentFetch from './found-successful-screen/update-comment-fetch';\nimport './stylesheets/add-item-screen.css';\n\nclass FoundSuccessfulScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: '',\n            commentSubmitted: false,\n            itemAlreadyFound: false\n        };\n    };\n\n    render() {\n        let updateCommentSubmitted = () => \n            this.setState({ commentSubmitted: true });\n\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen center-div success-image-background\">\n                    <form \n                        className='found-items-form'\n                        onSubmit={event => {\n                            event.preventDefault();\n                            updateCommentFetch(this.state.comment, this.props.itemId, updateCommentSubmitted);\n                        }}>\n                        <div className='form-header center-div'>\n                            <p className='form-title found-title'>Joy Found!!!</p>\n                        </div>\n                        <div className='form-body'>\n                            <div className='found-items-form-section'>\n                                <p className='form-text'>Yay! You found some joy!</p> \n                                <p className='form-text'>Thank you for being awesomely you! <i className=\"far fa-grin-beam\" /></p>\n                            </div>\n                            {this.state.commentSubmitted\n                            ? <p className='found-comment-thank-you'>Thank you for sharing your thoughts!!! <i className=\"far fa-smile\"></i></p>\n                            :<div>\n                                <div className='form-section'>\n                                    <p className='form-section-title'>Share your story! (Optional)</p>\n                                    <textarea \n                                        className='input-box description-box'\n                                        placeholder=''\n                                        value={this.state.comment}\n                                        onChange={event => {\n                                            this.setState({comment: event.target.value})\n                                        }} \n                                    />\n                                </div>\n                                <div className='form-section'>\n                                    <button type='submit' className='form-button'>Submit</button>\n                                </div>\n                            </div>\n                            }\n                            <div className='found-items-buttons-section'>\n                                <ItemDescriptionButton id={this.props.itemId}/>\n                                <div className='form-btns-container'>\n                                    <Link to='/add'><button className='form-button'>Add Joy</button></Link>\n                                    <Link to='/search'><button className='form-button'>Find Joy</button></Link>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};\n\nexport default connect(\n    state => ({ itemId: state.itemId })\n)(FoundSuccessfulScreen);","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport './stylesheets/not-found.css';\n\nlet NotFoundScreen = () =>\n    <div className=\"full-screen\">\n        <Header />\n        <div className=\"screen not-found-image-background\">\n            <p className='not-found-title'>404: Not Found! <i className=\"far fa-frown\"></i></p>\n            <p className='not-found-text'>Sorry you didn't find what you were looking for.</p>\n            <span className='little-dots'>...</span>\n            <p className='not-found-text'>We hope we can make it up to you with this little starfish: <i className='fas fa-star little-star'></i></p>\n        </div>\n        <Footer />\n    </div>\n\nexport default NotFoundScreen;","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport HomeScreen from './home-screen';\nimport AboutScreen from './about-screen';\nimport SearchMapScreen from './search-map-screen';\nimport AddItemScreen from './add-item-screen';\nimport ItemDetailsScreen from './item-details-screen';\nimport SubmissionSuccessfulScreen from './submission-successful-screen';\nimport FoundItemsScreen from './found-items-screen';\nimport FoundSuccessfulScreen from './found-successful-screen';\nimport NotFoundScreen from './not-found-screen';\n\nlet Router = () =>\n    <HashRouter>\n        <div className=\"full-screen\">\n            <Switch>\n                <Route exact path=\"/\" component={HomeScreen} />\n                <Route exact path='/about' component={AboutScreen} />\n                <Route exact path=\"/search\" component={SearchMapScreen} />\n                <Route exact path=\"/add\" component={AddItemScreen} />\n                <Route exact path=\"/items/:id\" component={ItemDetailsScreen} />\n                <Route exact path=\"/submit-success\" component ={SubmissionSuccessfulScreen} />\n                <Route exact path=\"/found\" component={FoundItemsScreen} />\n                <Route exact path=\"/found-success\" component={FoundSuccessfulScreen} />\n                <Route path=\"*\" component={NotFoundScreen} />\n            </Switch>\n        </div>\n    </HashRouter>\n\nexport default Router;","let updateLocation = (oldState, action) => {\n    let lat = action.location.lat;\n    let lng = action.location.lng;\n    return {...oldState, lat, lng}\n};\n\nlet updateItemId = (oldState, action) => ({...oldState, itemId: action.itemId});\n\nlet updateFoundCode = (oldState, action) => ({...oldState, foundCode: action.foundCode});\n\nlet updateItems = (oldState, action) => ({...oldState, items: action.items});\n\nlet reducers = {\n    'UPDATE_LOCATION': updateLocation,\n    'UPDATE_ITEM_ID': updateItemId,\n    'UPDATE_ITEMS': updateItems,\n    'UPDATE_FOUND_CODE': updateFoundCode\n};\n\nlet reducer = (oldState, action) => {\n    let doer = reducers[action.type];\n    return doer ? doer(oldState, action) : oldState;\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nlet initialState = {\n    lat: 33.7490,\n    lng: -84.3880,\n    items:[],\n    currentLocation: {lat:'',lng:''},\n    itemId: '',\n    foundCode: ''\n};\n\nlet store = createStore(\n    reducer,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\nwindow.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './router';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nlet app = <Provider store={store}>\n    <Router />\n</Provider>\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}