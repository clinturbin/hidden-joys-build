{"version":3,"sources":["play-dropdown-menu-button.js","play-dropdown-menu-list.js","play-dropdown-menu.js","header.js","footer.js","keys.js","map-screen/search-box.js","home-screen/search-button.js","home-screen/add-button.js","home-screen/found-button.js","home-screen.js","about-screen.js","map-screen/item-info-window.js","map-screen/item-marker.js","map-screen/search-map.js","map-screen/current-location-button.js","map-screen/search-map-container.js","search-map-screen.js","add-item-screen/generate-id.js","add-item-screen/add-item-fetch.js","add-item-screen/new-hint.js","add-item-screen/hint-listing.js","add-item-screen.js","item-details-screen/image-link-error-message.js","item-details-screen/item-detail-map.js","item-details-screen/item-details-status-container.js","item-details-screen/item-details-hints.js","item-details-screen/item-details-form.js","item-details-screen.js","item-description-button.js","submission-successful-screen.js","found-items-screen/found-item-fetch.js","found-items-screen/find-item-fetch.js","found-items-screen.js","found-successful-screen/update-comment-fetch.js","found-successful-screen.js","not-found-screen.js","router.js","reducer.js","store.js","index.js"],"names":["PlayDropDownMenuButton","props","react_default","a","createElement","onClick","event","preventDefault","showMenu","className","PlayDropDownMenuList","NavLink","to","PlayDropdownMenu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","play_dropdown_menu_button","setState","play_dropdown_menu_list","React","Component","Header","play_dropdown_menu","Footer","keys","GOOGLE_MAPS_API_KEY","GOOGLE_PLACES_API_KEY","PlacesWithStandaloneSearchBox","compose","withProps","googleMapURL","concat","loadingElement","style","height","containerElement","lifecycle","componentWillMount","refs","places","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","lat","geometry","location","lng","dispatch","type","withScriptjs","data-standalone-searchbox","StandaloneSearchBox","bounds","placeholder","connect","SearchButton","Link","AddButton","FoundButton","HomeScreen","header","search_box","search_button","add_button","found_button","footer","AboutScreen","ItemInfoWindowContent","background","backgroundSize","item","title","found","id","ItemMarker","toggleOpen","isOpen","closeMarkers","itemId","activeMarker","nextProps","lib","position","maxWidth","maxHeight","defaultPosition","onCloseClick","onToggleOpen","item_info_window","SearchMap","withGoogleMap","markers","items","map","item_marker","key","closeOtherMarkers","Number","defaultZoom","center","currentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","SearchMapScreen","route","fetch","process","then","res","json","data","fetchRequest","current_location_button","generateId","alphabet","i","charAt","Math","floor","random","length","newItemBody","image","found_code","body","hints","updateStoreIdAndFoundCode","method","JSON","stringify","headers","Content-Type","Accept","foundCode","addItemFetch","NewHintForm","hint","value","onChange","target","hideNoHintsMessage","addNewHint","MAX_SAFE_INTEGER","toString","HintListings","removeHint","reverse","AddItemScreen","currentHint","showNoHintsMessage","code","updateStoreFoundCode","history","push","onSubmit","required","new_hint","newHints","toConsumableArray","hint_listing","oldHint","filter","ImageLinkErrorMessage","ItemDetailScreenMapContainer","src","width","frameBorder","border","allowFullScreen","ItemDetailsStatusContainer","backgroundImage","item_found","found_comment","ItemDetailsHints","ItemDetailsForm","item_details_status_container","item_detail_map","item_details_hints","ItemDetailsScreen","urlId","match","params","image_link_error_message","item_details_form","ItemDescriptionButton","SubmissionSuccessfulScreen","item_description_button","foundItemFetch","updateItemId","findItemFetch","invalidFoundCode","clearMessage","itemAlreadyFound","FoundItemsScreen","message","alreadyFound","updateCommentFetch","comment","updateCommentSubmitted","FoundSuccessfulScreen","commentSubmitted","NotFoundScreen","Router","HashRouter","Switch","Route","exact","path","component","reducers","UPDATE_LOCATION","oldState","action","objectSpread","UPDATE_ITEM_ID","UPDATE_ITEMS","UPDATE_FOUND_CODE","reducer","doer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","app","es","router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76d4201d.chunk.js","sourcesContent":["import React from 'react';\n\nlet PlayDropDownMenuButton = (props) =>\n    <div\n        onClick={event => {\n            event.preventDefault();\n            props.showMenu();\n        }}>\n            Let's play! <i className=\"fas fa-angle-down\" />\n    </div>\n\nexport default PlayDropDownMenuButton;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nlet PlayDropDownMenuList = () =>\n    <ul className='play-dropdown-menu-list'>\n        <li className='dropdown-list-item'>\n            <NavLink to='/search' className='dropdown-link'>Search Joys</NavLink>\n        </li>\n        <li className='dropdown-list-item'>\n            <NavLink to='/add' className='dropdown-link'>Add Joy</NavLink>\n        </li>\n        <li className='dropdown-list-item'>\n            <NavLink to='/found' className='dropdown-link'>Found Joys</NavLink>\n        </li>\n    </ul>\n\nexport default PlayDropDownMenuList;","import React from 'react';\nimport PlayDropDownMenuButton from './play-dropdown-menu-button';\nimport PlayDropDownMenuList from './play-dropdown-menu-list';\n\nclass PlayDropdownMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showMenu: false,\n        }\n    }\n\n    render() {\n        let showMenu = () => this.setState({ showMenu: true });\n\n        return (\n            <div className='play-dropdown-menu header-navigation-item'>\n                <PlayDropDownMenuButton showMenu={showMenu} />\n                { this.state.showMenu ? <PlayDropDownMenuList /> : null }\n            </div>\n        )\n    };\n};\n\nexport default PlayDropdownMenu;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PlayDropdownMenu from './play-dropdown-menu';\n\nlet Header = () =>\n    <div className='header'>\n        <NavLink to='/' className='header-navigation-item'>\n            <p className=\"logo\">Hidden Joys <i className=\"far fa-smile\"></i></p>\n        </NavLink>\n        <div className='header-right'>\n            <NavLink to='/about' className='header-navigation-item'>\n                <p className='header-navigation-item'>About</p>\n            </NavLink>\n            <PlayDropdownMenu />\n        </div>\n    </div>\n\nexport default Header;","import React from 'react';\n\nlet Footer = () =>\n    <div className='footer'></div>\n\nexport default Footer;","let keys = {\n    GOOGLE_MAPS_API_KEY: 'AIzaSyA8k8P5d3IBAP6nWRI2HvcoWQNESD27Poc',\n    GOOGLE_PLACES_API_KEY: 'AIzaSyDaZi85qJWkgNDjFp5yfedJ47WOPCYjD5M'\n }\n \n export default keys;","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { withScriptjs } from \"react-google-maps\";\nimport { compose, withProps, lifecycle } from 'recompose';\nimport keys from '../keys';\nimport { StandaloneSearchBox } from \"react-google-maps/lib/components/places/StandaloneSearchBox\";\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${keys.GOOGLE_MAPS_API_KEY}&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {}\n      this.setState({\n        places:[],\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();\n          this.setState({\n            places,\n          });\n          let lat = this.state.places[0].geometry.location.lat();\n          let lng = this.state.places[0].geometry.location.lng();\n          this.props.dispatch({\n            type: 'UPDATE_LOCATION',\n            location:{lat,lng}\n          })\n        },\n      })\n    },\n  }),\n  withScriptjs\n)(props => \n  <div data-standalone-searchbox=\"\" className=\"search-box-container\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input className='search-box home-search-box'\n        type=\"text\"\n        placeholder=\"Search Places\"\n      />\n    </StandaloneSearchBox>\n  </div>\n);\n\nexport default connect(\n  state => ({lat:state.lat, lng:state.lng})\n)(PlacesWithStandaloneSearchBox);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet SearchButton = () =>\n    <Link to=\"/search\">\n        <button className=\"search-button\">\n            <i className=\"fas fa-search\"></i>\n        </button>\n    </Link>\n\nexport default SearchButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet AddButton = () =>\n    <Link to=\"/add\">\n        <button className=\"navigation-button\">\n            <i className=\"fas fa-plus circle add-icon\"></i> Add Joy\n        </button>\n    </Link>\n\nexport default AddButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet FoundButton = () =>\n    <Link to=\"/found\">\n        <button className=\"navigation-button\">\n            <i className=\"far fa-grin-beam\"></i> Found Joys\n        </button>\n    </Link>\n\nexport default FoundButton;","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport SearchBox from './map-screen/search-box';\nimport SearchButton from './home-screen/search-button';\nimport AddButton from './home-screen/add-button';\nimport FoundButton from './home-screen/found-button';\nimport './stylesheets/home-screen.css';\n\nlet HomeScreen = () =>\n    <div className=\"full-screen\">\n        <Header />\n        <div className=\"screen home-screen\">\n            <h1 className=\"main-title\">Hidden Joys</h1>\n            <div className=\"search-container\">\n                <SearchBox />\n                <SearchButton />\n            </div>\n            <div className=\"navigation-btns-container\">\n                <AddButton />\n                <FoundButton />\n            </div>\n        </div>\n        <Footer />\n    </div>\n\nexport default HomeScreen;","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\n\nlet AboutScreen = () =>\n    <div className='full-screen'>\n        <Header />\n            <div className='screen form-screen success-image-background'>\n                <div className='add-item-form'>\n                    <p className='form-title'>About</p>\n                </div>\n            </div>\n        <Footer />\n    </div>\n\nexport default AboutScreen;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/map-styling.css';\n\nlet ItemInfoWindowContent = (props) => {\n    let styles = {\n        background: `url(https://source.unsplash.com/_0aKQa9gr4s/)`, //placeholder image\n        // background: `url(${props.item.image})`,\n        backgroundSize: 'contain'\n    };\n\n    return (\n        <div className='info-window-container'>\n            <div className='info-window-section'>\n                <div className='info-window-image' style={styles}></div>\n            </div>\n            <div className='info-window-section'>\n                <p className='info-window-title'>{props.item.title}</p>\n                <p className='info-window-status'>{props.item.found ? 'Found' : 'Not Found'}</p>\n                <Link to={`/items/${props.item.id}`} >\n                    <p className='info-window-link'>Item Details</p>\n                </Link>\n            </div>\n        </div>\n    )\n};\n\nexport default ItemInfoWindowContent;","import React from 'react';\nimport { Marker, InfoWindow } from 'react-google-maps';\nimport ItemInfoWindowContent from './item-info-window';\n\nclass ItemMarker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            activeMarker: this.props.activeMarker\n        }\n    }\n    toggleOpen = () => {\n        this.setState({isOpen: !this.state.isOpen}, () => {\n            if (!this.state.isOpen) {\n                this.setState({activeMarker: false}, () => {\n                    this.props.closeMarkers(null)\n                })\n            } else {\n                this.props.closeMarkers(this.props.itemId)\n            }\n        })\n    };\n    componentWillReceiveProps(nextProps) {\n        this.setState({activeMarker: nextProps.activeMarker})\n    };\n    render() {\n        return (\n            <div>\n                <Marker\n                    onClick={this.toggleOpen}\n                    position={this.props.location}\n                >\n                { this.state.isOpen && this.state.activeMarker ?\n                    <InfoWindow maxWidth={800} maxHeight={800} defaultPosition={ this.props.location } onCloseClick={this.props.onToggleOpen}>\n                        <ItemInfoWindowContent item={this.props.item}/>\n                    </InfoWindow> : null\n                }\n                </Marker>\n            </div>\n        )\n    }\n};\n\nexport default ItemMarker;","import React from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport ItemMarker from './item-marker';\n\nconst SearchMap = withScriptjs(withGoogleMap((props) =>  {\n    let markers = props.items.map( item => \n            <ItemMarker \n                key={item.id}\n                itemId={item.id}\n                closeMarkers={props.closeOtherMarkers}\n                item={item}\n                location={{lat:Number(item.lat), lng:Number(item.lng)}}\n                activeMarker={item.id === props.activeMarker ? true : false}\n            />\n        )\n    return (\n        <GoogleMap\n            defaultZoom={14}\n            center={ props.location }\n        >\n        {markers}\n        </GoogleMap>\n    )\n}));\n\nexport default SearchMap;","import React from 'react';\nimport { connect } from 'react-redux';\n\nlet CurrentLocationButton = (props) => \n    <button \n        className='current-location-button'\n        onClick={event => {\n            event.preventDefault();\n            navigator.geolocation.getCurrentPosition(position => {\n                let pos = {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                };\n                props.dispatch({\n                    type: 'UPDATE_LOCATION',\n                    location:{lat:pos.lat, lng:pos.lng}\n                });\n            });\n        }\n        }\n    ><i className=\"fas fa-map-marker-alt\"></i> Current</button>\n\nexport default connect(\n    state => ({\n        lat: state.lat,\n        lng: state.lng,\n        currentLocation: state.currentLocation\n    })\n)(CurrentLocationButton);","import React from \"react\";\nimport SearchMap from './search-map';\nimport keys from '../keys';\n\nclass SearchMapContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            location: this.props.location,\n            activeMarker: null\n        };\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.items !== this.props.items) {\n            this.setState({\n                items: nextProps.items,\n                location: nextProps.location\n            });\n        };\n    };\n\n    closeOtherMarkers = (itemId) => this.setState({activeMarker: itemId});\n\n    render() {\n        return (\n            <SearchMap \n                items={this.props.items}\n                location={this.props.location}\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${keys.GOOGLE_MAPS_API_KEY}&v=3.exp&libraries=geometry,drawing,places`}\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `100%`, width: `100%` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n                activeMarker={this.state.activeMarker}\n                closeOtherMarkers={this.closeOtherMarkers}\n            />\n        )\n    }\n};\n\nexport default SearchMapContainer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from './header';\nimport Footer from './footer';\nimport SearchMapContainer from './map-screen/search-map-container';\nimport PlacesWithStandaloneSearchBox from './map-screen/search-box';\nimport CurrentLocationButton from './map-screen/current-location-button';\nimport FilterMapButtons from './map-screen/filter-map-buttons';\nimport './stylesheets/map-styling.css';\n\nclass SearchMapScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: {lat:this.props.lat, lng: this.props.lng}\n        }\n    };\n\n    fetchRequest(route) {\n        fetch(process.env.REACT_APP_API_URL + route)\n        .then(res => res.json())\n        .then(items => {\n            this.props.dispatch({\n                type: 'UPDATE_ITEMS',\n                items: items.data\n            })\n        });\n    }\n\n    componentDidMount() {\n        this.fetchRequest('/items')\n    };\n\n    render() {\n        let fetchAllItems = () => this.fetchRequest('/items');\n        let fetchHiddenItems = () => this.fetchRequest('/items/hidden');\n        let fetchFoundItems = () => this.fetchRequest('/items/found');\n\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen center-div\">\n                    <div className='search-map-screen-container'>\n                        <div className='search-map-screen-container-section'>\n                            <p className='map-screen-section-title'>Search By Location</p>\n                            <div className='center-div map-search-btns-container'>\n                                <CurrentLocationButton />\n                                <PlacesWithStandaloneSearchBox />\n                            </div>\n                        </div>\n                        <div className='search-map-screen-container-section'></div>\n                        <div className='search-map-screen-container-section'></div>\n                        <div className='search-map-screen-container-section'></div>\n                    </div>\n                    {/* <div className='search-input-container'>\n                        <CurrentLocationButton />\n                        <PlacesWithStandaloneSearchBox />\n                    </div> */}\n                    {/* <div className='filter-map-btns-container'>\n                        <FilterMapButtons \n                            fetchAllItems={fetchAllItems}\n                            fetchHiddenItems={fetchHiddenItems}\n                            fetchFoundItems={fetchFoundItems}\n                        />\n                    </div>\n                    <div className='map-container'>\n                        <SearchMapContainer\n                            location={ {lat: this.props.lat, lng: this.props.lng } }\n                            items={this.props.items}\n                        />\n                    </div>\n                    <div className='form-btns-container'>\n                        <Link to='/add'><button className='form-button'>Add Joy</button></Link>\n                    </div> */}\n                </div>\n                <Footer />\n            </div>\n        )\n    }\n};\n\nexport default connect(\n    state => ({lat: state.lat, lng: state.lng, items: state.items})\n)(SearchMapScreen);","let generateId = () => {\n    const alphabet = '23456789abdegjkmnpqrvwxyz';\n    let id_length = 10;\n    let id = '';\n    for (let i = 0; i < id_length; i++) {\n        id += alphabet.charAt(Math.floor(Math.random() * alphabet.length));\n    }\n    return id;\n};\n\nexport default generateId;","import generateId from './generate-id';\n\nlet newItemBody = (state, lat, lng) => ({\n    title: state.title,\n    lat: lat,\n    lng: lng,\n    image: state.image,\n    found_code: generateId(),\n});\n\nlet fetchRequest = (body, hints, updateStoreIdAndFoundCode) => {\n    fetch(`${process.env.REACT_APP_API_URL}/items`, {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(res => res.json())\n    .then(data => {\n        let itemId = data[0].id;\n        let foundCode = data[0].found_code;\n        let body = {itemId, hints};\n        fetch(`${process.env.REACT_APP_API_URL}/hints`, {\n            method: 'POST',\n            body: JSON.stringify(body),\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }).then(() => {\n            updateStoreIdAndFoundCode(itemId, foundCode);\n        })\n    })\n};\n\nlet addItemFetch = (state, props, updateStoreIdAndFoundCode) => {\n    if (state.location === 'current') {\n        navigator.geolocation.getCurrentPosition(position => {\n            let lat = position.coords.latitude;\n            let lng = position.coords.longitude;\n            let body = newItemBody(state, lat, lng);\n            fetchRequest(body, state.hints, updateStoreIdAndFoundCode);\n        });\n    } else {\n        let body = newItemBody(state, props.lat, props.lng);\n        fetchRequest(body, state.hints, updateStoreIdAndFoundCode);\n    }\n};\n\nexport default addItemFetch;","import React from 'react';\n\nclass NewHintForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hint: ''\n        };\n    };\n    render() {\n        let generateId = () => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString();\n        return (\n            <div className='new-hint-container'>\n                <input\n                    className='input-box fill-height'\n                    type='text'\n                    value={this.state.hint}\n                    onChange={event => {\n                        this.setState({hint: event.target.value})\n                    }}\n                />\n                <button\n                    className='form-button fill-height'\n                    onClick={event => {\n                        event.preventDefault();\n                        this.props.hideNoHintsMessage();\n                        this.props.addNewHint({id: generateId(), hint: this.state.hint});\n                        this.setState({hint: ''});\n                    }}\n                >+</button>\n            </div>\n        )\n    }\n};\n\nexport default NewHintForm;","import React from 'react';\n\nlet HintListings = (props) => \n    <div className='hint-listings'>\n        {props.hints.map(hint => \n            <div className='hint-listing' key={hint.id}>\n                <p className='hint-listing-text'>{hint.hint}</p>\n                <button\n                    className='form-button'\n                    onClick={() => {\n                        props.removeHint(hint)\n                    }}\n                >-</button>\n            </div>\n        ).reverse()}\n    </div>\n\nexport default HintListings;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './header';\nimport Footer from './footer';\nimport SearchBox from './map-screen/search-box';\nimport addItemFetch from './add-item-screen/add-item-fetch';\nimport NewHintForm from './add-item-screen/new-hint';\nimport HintListings from './add-item-screen/hint-listing';\nimport './stylesheets/add-item-screen.css';\n\nclass AddItemScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentHint: '',\n            title: '',\n            location:'current',\n            image: 'https://source.unsplash.com/_0aKQa9gr4s/',\n            hints: [],\n            showNoHintsMessage: false\n        }\n    };\n\n    componentDidMount() {\n        this.props.dispatch({\n            type: 'UPDATE_ITEM_ID',\n            itemId: ''\n        });\n        this.props.dispatch({\n            type: 'UPDATE_FOUND_CODE',\n            foundCode: ''\n        });\n    };\n\n    render() {\n        let updateStoreItemId = (id) => {\n            this.props.dispatch({\n                type: 'UPDATE_ITEM_ID',\n                itemId: id\n            });\n        };\n\n        let updateStoreFoundCode = (code) => {\n            this.props.dispatch({\n                type: 'UPDATE_FOUND_CODE',\n                foundCode: code\n            });\n        };\n\n        let updateStoreIdAndFoundCode = (itemId, code) => {\n            updateStoreItemId(itemId);\n            updateStoreFoundCode(code);\n            this.props.history.push(`/submit-success`);\n        };\n\n        let addNewHint = (hint) => {\n            let newHints = [...this.state.hints, hint]\n            this.setState({hints: newHints}) \n        };\n\n        let removeHint = (oldHint) => {\n            let newHints = this.state.hints.filter(hint => hint.id !== oldHint.id);\n            this.setState({hints: newHints});\n        };\n\n        let hideNoHintsMessage = () => this.setState({showNoHintsMessage: false});\n\n        let submitForm = () => {\n            if (this.state.hints.length === 0 ) {\n                this.setState({showNoHintsMessage: true});\n            } else {\n                addItemFetch(this.state, this.props, updateStoreIdAndFoundCode);\n            }\n        };\n\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className='screen form-screen success-image-background'>\n                    <form \n                    className='add-item-form'\n                    onSubmit={event => {\n                        event.preventDefault();\n                        submitForm();\n                    }}>\n                        <p className='form-title'>Hide New Item</p>\n                        <div className='form-section'>\n                            <p className='form-section-title'>Title</p>\n                            <input \n                                className='input-box'\n                                type='text'\n                                required\n                                value={this.state.title}\n                                onChange={event => {\n                                    this.setState({title: event.target.value})\n                                }}\n                            />\n                        </div>\n                        <div className='form-section'>\n                            <p className='form-section-title'>Location</p>\n                            <select \n                                className='input-box'\n                                value={this.state.location}\n                                onChange={event => {\n                                    this.setState({location:event.target.value})\n                                }}>\n                                <option value='current'>Use Current Location</option>\n                                <option value='search'>Search By Location</option>\n                            </select>\n                            {this.state.location === 'current' ? <p></p> : <SearchBox />}\n                        </div>\n                        <div className='form-section'>\n                            <p className='form-section-title'>Image/url</p>\n                            <input \n                                className='input-box'\n                                type='text'\n                                required\n                                value={this.state.image}\n                                onChange={event => {\n                                    this.setState({image: event.target.value})\n                                }}\n                            />\n                        </div>\n                        <div className='form-section'>\n                            <p className='form-section-title'>Hints</p>\n                            <NewHintForm addNewHint={addNewHint} hideNoHintsMessage={hideNoHintsMessage}/>\n                            {this.state.showNoHintsMessage \n                                ? <p className='no-hints-message'>Please Provide a Hint!!!</p>\n                                : <HintListings hints={this.state.hints} removeHint={removeHint}/>\n                            }\n                        </div>\n                        <div className='form-section'>\n                            <button type='submit' className='form-button'>Submit</button>\n                        </div>\n                    </form>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};\n\nexport default connect(\n    state => ({lat: state.lat, lng: state.lng})\n)(AddItemScreen);","import React from 'react';\n\nlet ImageLinkErrorMessage = () =>\n    <div className='image-link-error-container'>\n        <div>BAD URL</div>\n    </div>\n\nexport default ImageLinkErrorMessage;","import React from 'react';\n\nlet ItemDetailScreenMapContainer = (props) => \n    <div className='item-detail-map-container'>\n        <iframe src={`https://www.google.com/maps/embed?pb=!1m21!1m12!1m3!1d3356.8829468635663!2d${props.lng}!3d${props.lat}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!4m6!3e6!4m0!4m3!3m2!1d${props.lat}!2d${props.lng}!5e0!3m2!1sen!2sus!4v1539189750210`} width=\"100%\" height=\"100%\" frameBorder=\"0\" style={{border:\"0\"}} allowFullScreen></iframe>\n    </div>\n\nexport default ItemDetailScreenMapContainer;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet ItemDetailsStatusContainer = (props) =>\n    <div className='item-detail-body-section status-wrapper'>\n        <div \n            className='item-detail-image-container'\n            style={{\n                backgroundImage:`url(${props.item.image}`,\n                backgroundSize:'cover'\n            }}\n        ></div>\n        <div className='item-detail-status-section'>\n            <p className='item-details-section-title'>Status:</p>\n            {props.item.item_found ?\n            <div className='status-display-container'>\n                <p className='item-details-status-text'>Item Found!!</p>\n                <div className='status-comment-container'>\n                    <p className='status-comment-font'>{props.item.found_comment}</p>\n                </div>\n            </div> :\n            <div className='status-display-container'>\n                <p className='item-details-status-text'>Item Still Hidden!!</p>\n                <div className='status-comment-container'>\n                    <Link to='/found'><button className='detail-screen-button'>Found</button></Link>\n                </div>\n            </div>\n            }\n        </div>\n    </div>\n\nexport default ItemDetailsStatusContainer;","import React from 'react';\n\nlet ItemDetailsHints = (props) => \n    <div className='item-detail-body-section'>\n        <p className='item-details-section-title'>Hints</p>\n        <div className='hints-container'>\n            {props.hints.map(hint =>\n                <p className='item-detail-hint-listing' key={hint.id}>{hint.hint}</p>    \n            )}\n        </div>\n    </div>\n\nexport default ItemDetailsHints;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ItemDetailsStatusContainer from './item-details-status-container';\nimport ItemDetailScreenMapContainer from './item-detail-map';\nimport ItemDetailsHints from './item-details-hints';\n\nlet ItemDetailsForm = (props) => \n    <div className='item-detail-form'>\n        <div className='item-detail-form-header center-div'>\n            <h3 className='item-detail-title'>{`${props.item.title}`}</h3>\n        </div>\n        <hr/>\n        <div className='item-detail-form-body'>\n            <ItemDetailsStatusContainer item={props.item}/>\n            <div className='item-detail-body-section'>\n                <div className='mobile-map-display'>\n                    <ItemDetailScreenMapContainer lat={props.item.lat} lng={props.item.lng}/>\n                </div>\n            </div>\n            <ItemDetailsHints hints={props.hints}/>\n        </div>\n        <hr/>\n        <div className='item-detail-form-footer center-div'>\n            <Link to='/add'><button className='detail-screen-button'>Add</button></Link>\n            <Link to='/search'><button className='detail-screen-button'>Search</button></Link>\n        </div>\n    </div>\n\nexport default ItemDetailsForm;","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport ImageLinkErrorMessage from './item-details-screen/image-link-error-message';\nimport ItemDetailScreenMapContainer from './item-details-screen/item-detail-map';\nimport ItemDetailsForm from './item-details-screen/item-details-form';\nimport './stylesheets/item-details-screen.css';\n\nclass ItemDetailsScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            urlId: '',\n            item: '',\n            hints: []\n        };\n    };\n\n    componentDidMount() {\n        let urlId = this.props.match.params.id;\n        fetch(`${process.env.REACT_APP_API_URL}/items/${urlId}`)\n        .then(res => res.json())\n        .then(data => {\n            this.setState({item: data.data});\n            this.setState({urlId: urlId});\n            fetch(`${process.env.REACT_APP_API_URL}/items/${urlId}/hints`)\n            .then(res => res.json())\n            .then(data => this.setState({hints: data.data}))\n        })\n    };\n\n    render() {\n        return (\n            <div className='full-screen'>\n                <Header />\n                <div className='screen success-image-background center-div'>\n                    {this.state.item === 'Error' ? \n                        <ImageLinkErrorMessage />:\n                        <div className='item-details-container'>\n                            <div className='desktop-map-display'>\n                                <ItemDetailScreenMapContainer lat={this.state.item.lat} lng={this.state.item.lng}/>\n                            </div>\n                            <ItemDetailsForm item={this.state.item} hints={this.state.hints}/>\n                        </div>\n                    }\n                </div>\n                <Footer />\n            </div>\n        )\n    }\n};\n\nexport default ItemDetailsScreen;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet ItemDescriptionButton = (props) => \n    <Link to={`/items/${props.id}`}>\n        <button className='form-button'>View Item Description</button>\n    </Link>\n    \n\nexport default ItemDescriptionButton;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from './header';\nimport Footer from './footer';\nimport ItemDescriptionButton from './item-description-button';\nimport './stylesheets/add-item-screen.css';\n\nclass SubmissionSuccessfulScreen extends React.Component {\n    constructor(props) {\n        super(props);\n    };\n    render() {\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen form-screen success-image-background\">\n                    <div className='add-item-form'>\n                        <p className='form-title'>Thank You!!!</p>\n                        <div className='form-section'>\n                            <p className='form-text'>Thank you very much for adding some joy into the world!</p>\n                            <p className='form-text'>Your item id is:</p>\n                            <div className='input-box id-box'>\n                                <p className='id-text'>{this.props.foundCode}</p>\n                            </div>\n                        </div>\n                        <div className='form-section'>\n                            <p className='form-text'>Please include this id when hiding your item of joy so that others can let us know when they have found the item!</p>\n                            <ItemDescriptionButton id={this.props.itemId}/>\n                        </div>\n                        <div className='form-section'>\n                            <div className='form-btns-container'>\n                                <Link to='/add'><button className='form-button'>Add Joy</button></Link>\n                                <Link to='/search'><button className='form-button'>Find Joy</button></Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};  \n\nexport default connect(\n    state => ({itemId: state.itemId, foundCode: state.foundCode})\n)(SubmissionSuccessfulScreen);","let foundItemFetch = (item, updateItemId) => {\n    fetch(`${process.env.REACT_APP_API_URL}/items/${item.id}/found`, {\n        method: 'PUT',\n        body: JSON.stringify({ id: item.id, found: true }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    })\n    .then(() => {\n        updateItemId(item.id);\n    }) \n};\n\nexport default foundItemFetch;","import foundItemFetch from './found-item-fetch';\n\nlet findItemFetch = (foundCode, invalidFoundCode, clearMessage, updateItemId, itemAlreadyFound) => {\n    fetch(`${process.env.REACT_APP_API_URL}/codes/${foundCode}`)\n    .then(res => res.json())\n    .then(data => {\n        if (data.data === 'Error') {\n            invalidFoundCode();\n        }\n        else {\n            clearMessage();\n            data.data.item_found \n            ? itemAlreadyFound(data.data.id)\n            : foundItemFetch(data.data, updateItemId);\n        }\n    });\n};\n\nexport default findItemFetch;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './header';\nimport Footer from './footer';\nimport findItemFetch from './found-items-screen/find-item-fetch';\nimport ItemDescriptionButton from './item-description-button';\nimport './stylesheets/found-items-screen.css';\n\nclass FoundItemsScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            id: '',\n            message: '',\n            foundCode: '',\n            alreadyFound: false\n        }\n    }\n\n    render() {\n        let invalidFoundCode = () => {\n            this.setState({ foundCode: '' });\n            this.setState({alreadyFound: false});\n            this.setState({ message: 'Invalid Id' });\n        };\n\n        let clearMessage = () =>\n            this.setState({ message: '' });\n\n        let updateItemId = (id) => {\n            this.props.dispatch({\n                type: 'UPDATE_ITEM_ID',\n                itemId: id\n            });\n            this.props.history.push(`/found-success`);\n        };\n\n        let itemAlreadyFound = (itemId) => {\n            this.setState({alreadyFound: true});\n            this.props.dispatch({\n                type: 'UPDATE_ITEM_ID',\n                itemId: itemId\n            });\n            this.setState({foundCode: ''});\n        };\n\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen success-image-background\">\n                    <div className='form-container'>\n                        <form \n                            className=\"add-item-form\"\n                            onSubmit={event => {\n                                event.preventDefault();\n                                findItemFetch(this.state.foundCode, invalidFoundCode, clearMessage, updateItemId, itemAlreadyFound);\n                        }}>\n                            <p className='form-title'>Did you find some joy? <i className=\"far fa-smile-wink\"></i></p>\n                            <div className='form-section'>\n                                <p className='form-text'>Wooo! That's super awesome!</p>\n                                <p className='form-text'>To mark your piece of joy as found, find the id attached to your joy and enter it below.</p>\n                            </div>\n                            <div className='form-section'>\n                                <p className='form-section-title'>Enter joy id:</p>\n                                <div className='search-id-form-section'>\n                                    <input \n                                        className='input-box search-id-box'\n                                        required\n                                        type='text'\n                                        value={this.state.foundCode}\n                                        onChange={event => {\n                                            this.setState({foundCode: event.target.value})\n                                        }} \n                                    />\n                                    <button \n                                        className='form-button search-items-button' \n                                        type=\"submit\">Found!\n                                    </button>\n                                </div>\n                            </div>\n                            <div className='form-section'>\n                                {this.state.alreadyFound\n                                    ? <div className='form-section'>\n                                        <p className='form-section-title'>Item Has Already Been Found!!</p>\n                                        <ItemDescriptionButton id={this.props.itemId}/>\n                                    </div>\n                                    : <p className='form-section-title'>{this.state.message}</p>\n                                }\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};\n\nexport default connect(\n    state => ({ itemId: state.itemId, foundCode: state.foundCode })\n)(FoundItemsScreen);","let updateCommentFetch = (comment, id, updateCommentSubmitted) =>\n    fetch(process.env.REACT_APP_API_URL + '/items/' + id + '/comment', {\n        method: 'PUT',\n        body: JSON.stringify({ id: id, comment: comment }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    })\n    .then(() => updateCommentSubmitted())\n\nexport default updateCommentFetch;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from './header';\nimport Footer from './footer';\nimport ItemDescriptionButton from './item-description-button';\nimport updateCommentFetch from './found-successful-screen/update-comment-fetch';\nimport './stylesheets/add-item-screen.css';\n\nclass FoundSuccessfulScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: '',\n            commentSubmitted: false,\n            itemAlreadyFound: false\n        };\n    };\n\n    render() {\n        let updateCommentSubmitted = () => \n            this.setState({ commentSubmitted: true });\n\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen form-screen success-image-background\">\n                    <form \n                        className='add-item-form'\n                        onSubmit={event => {\n                            event.preventDefault();\n                            updateCommentFetch(this.state.comment, this.props.itemId, updateCommentSubmitted);\n                        }}>\n                        <p className='form-title'>Joy Found!!!</p>\n                        <div className='form-section'>\n                            <p className='form-text'>Yay! You found some joy! Thank you for being awesomely you! <i className=\"far fa-grin-beam\" />\n                            </p>\n                        </div>\n                        {this.state.commentSubmitted\n                        ? <p className='found-comment-thank-you'>Thank You for sharing your thoughts!!!</p>\n                        :<div className='form-section-change'>\n                            <div className='form-section'>\n                                <p className='form-section-title'>Share your story! (Optional)</p>\n                                <textarea \n                                    className='input-box description-box'\n                                    placeholder=''\n                                    value={this.state.comment}\n                                    onChange={event => {\n                                        this.setState({comment: event.target.value})\n                                    }} \n                                />\n                            </div>\n                            <div className='form-section'>\n                                <button type='submit' className='form-button'>Submit</button>\n                            </div>\n                        </div>\n                        }\n                        <div className='form-section'>\n                            <ItemDescriptionButton id={this.props.itemId}/>\n                        </div>\n                        <div className='form-section'>\n                            <div className='form-btns-container'>\n                                <Link to='/add'><button className='form-button'>Add Joy</button></Link>\n                                <Link to='/search'><button className='form-button'>Find Joy</button></Link>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};\n\nexport default connect(\n    state => ({ itemId: state.itemId })\n)(FoundSuccessfulScreen);","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport './stylesheets/not-found.css';\n\nlet NotFoundScreen = () =>\n    <div className=\"full-screen\">\n        <Header />\n        <div className=\"screen not-found-image-background\">\n            <p className='not-found-title'>404: Not Found! <i className=\"far fa-frown\"></i></p>\n            <p className='not-found-text'>Sorry you didn't find what you were looking for.</p>\n            <span className='little-dots'>...</span>\n            <p className='not-found-text'>We hope we can make it up to you with this little starfish: <i className='fas fa-star little-star'></i></p>\n        </div>\n        <Footer />\n    </div>\n\nexport default NotFoundScreen;","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport HomeScreen from './home-screen';\nimport AboutScreen from './about-screen';\nimport SearchMapScreen from './search-map-screen';\nimport AddItemScreen from './add-item-screen';\nimport ItemDetailsScreen from './item-details-screen';\nimport SubmissionSuccessfulScreen from './submission-successful-screen';\nimport FoundItemsScreen from './found-items-screen';\nimport FoundSuccessfulScreen from './found-successful-screen';\nimport NotFoundScreen from './not-found-screen';\n\nlet Router = () =>\n    <HashRouter>\n        <div className=\"full-screen\">\n            <Switch>\n                <Route exact path=\"/\" component={HomeScreen} />\n                <Route exact path='/about' component={AboutScreen} />\n                <Route exact path=\"/search\" component={SearchMapScreen} />\n                <Route exact path=\"/add\" component={AddItemScreen} />\n                <Route exact path=\"/items/:id\" component={ItemDetailsScreen} />\n                <Route exact path=\"/submit-success\" component ={SubmissionSuccessfulScreen} />\n                <Route exact path=\"/found\" component={FoundItemsScreen} />\n                <Route exact path=\"/found-success\" component={FoundSuccessfulScreen} />\n                <Route path=\"*\" component={NotFoundScreen} />\n            </Switch>\n        </div>\n    </HashRouter>\n\nexport default Router;","let updateLocation = (oldState, action) => {\n    let lat = action.location.lat;\n    let lng = action.location.lng;\n    return {...oldState, lat, lng}\n};\n\nlet updateItemId = (oldState, action) => ({...oldState, itemId: action.itemId});\n\nlet updateFoundCode = (oldState, action) => ({...oldState, foundCode: action.foundCode});\n\nlet updateItems = (oldState, action) => ({...oldState, items: action.items});\n\nlet reducers = {\n    'UPDATE_LOCATION': updateLocation,\n    'UPDATE_ITEM_ID': updateItemId,\n    'UPDATE_ITEMS': updateItems,\n    'UPDATE_FOUND_CODE': updateFoundCode\n};\n\nlet reducer = (oldState, action) => {\n    let doer = reducers[action.type];\n    return doer ? doer(oldState, action) : oldState;\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nlet initialState = {\n    lat: 33.7490,\n    lng: -84.3880,\n    items:[],\n    currentLocation: {lat:'',lng:''},\n    itemId: '',\n    foundCode: ''\n};\n\nlet store = createStore(\n    reducer,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\nwindow.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './router';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nlet app = <Provider store={store}>\n    <Router />\n</Provider>\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}