{"version":3,"sources":["play-dropdown-menu.js","header.js","footer.js","keys.js","map-screen/search-box.js","search-button.js","add-button.js","found-button.js","home-screen.js","about-screen.js","map-screen/item-info-window.js","map-screen/item-marker.js","map-screen/search-map.js","map-screen/search-map-container.js","map-screen/current-location-button.js","search-map-screen.js","add-item-screen/generate-id.js","add-item-screen/add-item-fetch.js","add-item-screen.js","item-details-screen.js","item-description-button.js","submission-successful-screen.js","found-item-fetch.js","find-item-fetch.js","found-items-screen.js","update-comment-fetch.js","found-successful-screen.js","not-found-screen.js","router.js","reducer.js","store.js","index.js"],"names":["PlayDropdownMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showMenu","bind","assertThisInitialized","closeMenu","event","_this2","preventDefault","setState","document","addEventListener","_this3","removeEventListener","react_default","a","createElement","className","onClick","NavLink","to","React","Component","Header","play_dropdown_menu","Footer","keys","GOOGLE_MAPS_API_KEY","GOOGLE_PLACES_API_KEY","PlacesWithStandaloneSearchBox","compose","withProps","googleMapURL","concat","loadingElement","style","height","containerElement","lifecycle","componentWillMount","refs","places","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","lat","geometry","location","lng","dispatch","type","withScriptjs","data-standalone-searchbox","StandaloneSearchBox","bounds","placeholder","connect","SearchButton","Link","AddButton","FoundButton","HomeScreen","header","search_box","search_button","add_button","found_button","footer","AboutScreen","ItemInfoWindowContent","item","title","ItemMarker","lib","updateActiveMarker","position","activeMarker","maxWidth","onCloseClick","item_info_window","SearchMap","withGoogleMap","markers","items","map","item_marker","key","id","itemId","Number","defaultZoom","center","onCenterChanged","console","log","SearchMapContainer","search_map","width","mapElement","currentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","SearchMapScreen","fetch","process","then","res","json","data","current_location_button","search_map_container","generateId","alphabet","i","charAt","Math","floor","random","length","buildBody","image","description","fetchRequest","body","updateItemId","method","JSON","stringify","headers","Content-Type","Accept","addItemFetch","AddItemScreen","history","push","onSubmit","required","value","onChange","target","ItemDetailsScreen","ItemDescriptionButton","SubmissionSuccessfulScreen","item_description_button","foundItemFetch","found","findItemFetch","invalidId","clearMessage","FoundItemsScreen","message","updateCommentFetch","comment","updateCommentSubmitted","FoundSuccessfulScreen","commentSubmitted","NotFoundScreen","Router","HashRouter","Switch","Route","exact","path","component","reducers","UPDATE_LOCATION","oldState","action","objectSpread","UPDATE_ITEM_ID","UPDATE_ITEMS","reducer","doer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","app","es","router","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.57dfdc14.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass PlayDropdownMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showMenu: false,\n        };\n\n        this.showMenu = this.showMenu.bind(this);\n        this.closeMenu = this.closeMenu.bind(this);\n    };\n\n    showMenu(event) {\n        event.preventDefault();\n        this.setState({ showMenu: true }, () => {\n            document.addEventListener('click', this.closeMenu);\n        });\n    }\n\n    closeMenu() {\n        this.setState({ showMenu: false }, () => {\n            document.removeEventListener('click', this.closeMenu);\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"play-dropdown-menu nav-item\">\n                <div onClick={this.showMenu}>Let's play! <i className=\"fas fa-angle-down\"></i>\n                </div>\n\n                { this.state.showMenu\n                    ? (\n                        <ul className=\"play-dropdown-menu-list\">\n                            <li className=\"dropdown-list-item\">\n                                <NavLink to=\"/search\" className=\"dropdown-link\">Search Joys</NavLink>\n                             </li>\n                            <li className=\"dropdown-list-item\">\n                                <NavLink to=\"/add\" className=\"dropdown-link\">Add Joy</NavLink>\n                            </li>\n                            <li className=\"dropdown-list-item\">\n                                <NavLink to=\"/found\" className=\"dropdown-link\">Found Joys</NavLink>\n                            </li>\n                        </ul>\n                    )\n                    : ( null ) \n                }\n            </div>\n        );\n    }\n}\n\nexport default PlayDropdownMenu;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PlayDropdownMenu from './play-dropdown-menu';\n\nlet Header = () =>\n    <div className=\"header\">\n        <NavLink to='/' className=\"nav-item\">\n            <p className=\"nav-item\">Hidden Joys <i className=\"far fa-smile\"></i> \n            </p>\n        </NavLink>\n        <div className='header-right'>\n            <NavLink to='/about' className=\"nav-item\">\n                <p className=\"nav-item\">About</p>\n            </NavLink>\n            <PlayDropdownMenu />\n        </div>\n    </div>\n\nexport default Header;","import React from 'react';\n\nlet Footer = () =>\n    <div className=\"footer\"></div>\n\nexport default Footer;","let keys = {\n    GOOGLE_MAPS_API_KEY: 'AIzaSyA8k8P5d3IBAP6nWRI2HvcoWQNESD27Poc',\n    GOOGLE_PLACES_API_KEY: 'AIzaSyDaZi85qJWkgNDjFp5yfedJ47WOPCYjD5M'\n }\n \n export default keys;","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { withScriptjs } from \"react-google-maps\";\nimport { compose, withProps, lifecycle } from 'recompose';\nimport keys from '../keys';\nimport { StandaloneSearchBox } from \"react-google-maps/lib/components/places/StandaloneSearchBox\";\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${keys.GOOGLE_MAPS_API_KEY}&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {}\n      this.setState({\n        places:[],\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();\n          this.setState({\n            places,\n          });\n          let lat = this.state.places[0].geometry.location.lat();\n          let lng = this.state.places[0].geometry.location.lng();\n          this.props.dispatch({\n            type: 'UPDATE_LOCATION',\n            location:{lat,lng}\n          })\n        },\n      })\n    },\n  }),\n  withScriptjs\n)(props => \n  <div data-standalone-searchbox=\"\" className=\"search-box-container\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input className='search-box home-search-box'\n        type=\"text\"\n        placeholder=\"Search Map\"\n      />\n    </StandaloneSearchBox>\n  </div>\n);\n\nexport default connect(\n  state => ({lat:state.lat, lng:state.lng})\n)(PlacesWithStandaloneSearchBox);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet SearchButton = () =>\n    <Link to=\"/search\">\n        <button className=\"search-button\">\n            <i className=\"fas fa-search\"></i>\n        </button>\n    </Link>\n\nexport default SearchButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet AddButton = () =>\n    <Link to=\"/add\">\n        <button className=\"nav-button\">\n            <i className=\"fas fa-plus circle add-icon\"></i> Add Joy\n        </button>\n    </Link>\n\nexport default AddButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet FoundButton = () =>\n    <Link to=\"/found\">\n        <button className=\"nav-button\">\n            <i className=\"far fa-grin-beam\"></i> Found Joys\n        </button>\n    </Link>\n\nexport default FoundButton;","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport SearchBox from './map-screen/search-box';\nimport SearchButton from './search-button';\nimport AddButton from './add-button';\nimport FoundButton from './found-button';\nimport './stylesheets/home-screen-styling.css';\n\nlet HomeScreen = () =>\n    <div className=\"full-screen\">\n        <Header />\n        <div className=\"screen home-screen\">\n            <h1 className=\"main-title\">Hidden Joys</h1>\n            <div className=\"search-container\">\n                <SearchBox />\n                <SearchButton />\n            </div>\n            <div className=\"buttons-container\">\n                <AddButton />\n                <FoundButton />\n            </div>\n        </div>\n        <Footer />\n    </div>\n\nexport default HomeScreen;","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\n\nlet AboutScreen = () =>\n    <div className=\"full-screen\">\n        <Header />\n            <div className=\"screen\">\n                <p>About</p>\n            </div>\n        <Footer />\n    </div>\n\nexport default AboutScreen;","import React from 'react';\n\nlet ItemInfoWindowContent = (props) => {\n    return (\n        <div>\n            <p>{props.item.title}</p>\n            <p>Image</p>\n            <p>Link</p>\n        </div>\n    )\n};\n\nexport default ItemInfoWindowContent;","import React from 'react';\nimport { Marker, InfoWindow } from 'react-google-maps';\nimport ItemInfoWindowContent from './item-info-window'; \n\nlet ItemMarker = (props) => \n    <Marker\n        onClick={() => {\n            props.updateActiveMarker(props.item);\n        }}\n        position={props.location}\n    >\n    {props.item === props.activeMarker\n        ? <InfoWindow\n            maxWidth={300}\n            position={props.location}\n            onCloseClick={() => props.updateActiveMarker(null)} \n        >\n            <ItemInfoWindowContent item={props.item}/>\n        </InfoWindow>\n        : null}\n    </Marker>\n\nexport default ItemMarker;","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport ItemMarker from './item-marker';\n\nconst SearchMap = withScriptjs(withGoogleMap((props) =>  {\n    let markers = props.items.map( item => \n            <ItemMarker \n                key={item.id}\n                itemId={item.id}\n                location={{lat:Number(item.lat), lng:Number(item.lng)}}\n                updateActiveMarker={props.updateActiveMarker}\n                item={item}\n                activeMarker={props.activeMarker}\n            />\n        )\n    return (\n        <GoogleMap\n            defaultZoom={14}\n            center={ {lat: props.lat, lng: props.lng} }\n            onClick={() => {props.updateActiveMarker(null)}}\n            onCenterChanged={() => {\n                console.log('Center Changed')\n            }}\n        >\n        {markers}\n        </GoogleMap>\n    )\n}));\n\nexport default connect(\n    state => ({lat: state.lat, lng: state.lng, items:state.items})\n)(SearchMap);","import React from \"react\";\nimport SearchMap from './search-map';\nimport keys from '../keys';\n\n\nclass SearchMapContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeMarker: null\n        };\n    };\n\n    updateActiveMarker = (item) => {\n        this.setState({activeMarker: item});\n    };\n\n    render() {\n        return (\n            <SearchMap \n                googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${keys.GOOGLE_MAPS_API_KEY}&v=3.exp&libraries=geometry,drawing,places`}\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `100%`, width: `100%` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n                location={this.props.location}\n                activeMarker={this.state.activeMarker}\n                updateActiveMarker={this.updateActiveMarker}\n            />\n        )\n    }\n};\n\nexport default SearchMapContainer;","import React from 'react';\nimport { connect } from 'react-redux';\n\nlet CurrentLocationButton = (props) => \n    <button \n        className='form-button'\n        onClick={event => {\n            event.preventDefault();\n            navigator.geolocation.getCurrentPosition(position => {\n                let pos = {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                };\n                props.dispatch({\n                    type: 'UPDATE_LOCATION',\n                    location:{lat:pos.lat, lng:pos.lng}\n                });\n            });\n        }\n        }\n    ><i className=\"fas fa-map-marker-alt\"></i> Use Current Location</button>\n\nexport default connect(\n    state => ({\n        lat: state.lat,\n        lng: state.lng,\n        currentLocation: state.currentLocation\n    })\n)(CurrentLocationButton);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from './header';\nimport Footer from './footer';\nimport SearchMapContainer from './map-screen/search-map-container';\nimport PlacesWithStandaloneSearchBox from './map-screen/search-box';\nimport CurrentLocationButton from './map-screen/current-location-button';\nimport './stylesheets/map-styling.css';\n\nclass SearchMapScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lat: this.props.lat,\n            lng: this.props.lng\n        }\n    };\n\n    componentDidMount() {\n        // Get All Items from Database and add them to global store\n        fetch(process.env.REACT_APP_API_URL + '/items')\n        .then(res => res.json())\n        .then(items => {\n            this.props.dispatch({\n                type: 'UPDATE_ITEMS',\n                items: items.data\n            })\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen\">\n                    <div className='search-input-container'>\n                        <CurrentLocationButton />\n                        <PlacesWithStandaloneSearchBox />\n                    </div>\n                    <div className='map-container'>\n                        <SearchMapContainer \n                            location={ {lat: this.state.lat, lng: this.state.lng} }\n                        />\n                    </div>\n                    <div className='form-btns-container'>\n                        <Link to='/add'><button className='form-button'>Add Joy</button></Link>\n                        <Link to='/search'><button className='form-button'>Find Joy</button></Link>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        )\n    }\n};\n\nexport default connect(\n    state => ({lat: state.lat, lng: state.lng, items: state.items})\n)(SearchMapScreen);","let generateId = () => {\n    const alphabet = '23456789abdegjkmnpqrvwxyz';\n    let id_length = 10;\n    let id = '';\n    for (let i = 0; i < id_length; i++) {\n        id += alphabet.charAt(Math.floor(Math.random() * alphabet.length));\n    }\n    return id;\n};\n\nexport default generateId;","import generateId from './generate-id';\n\nlet buildBody = (state, lat, lng) => ({\n    id: generateId(),\n    title: state.title,\n    lat: lat,\n    lng: lng,\n    image: state.image,\n    description: state.description\n});\n\nlet fetchRequest = (body, updateItemId) => {\n    fetch(process.env.REACT_APP_API_URL + '/items', {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    })\n    .then(() => {\n        console.log('Check database to confirm entry');\n        updateItemId(body.id);\n    })\n};\n\nlet addItemFetch = (state, props, updateItemId) => {\n    if (state.location === 'current') {\n        navigator.geolocation.getCurrentPosition(position => {\n            let lat = position.coords.latitude;\n            let lng = position.coords.longitude;\n            let body = buildBody(state, lat, lng);\n            fetchRequest(body, updateItemId);\n        });\n    } else {\n        let body = buildBody(state, props.lat, props.lng);\n        fetchRequest(body, updateItemId);\n    }\n};\n\nexport default addItemFetch;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './header';\nimport Footer from './footer';\nimport SearchBox from './map-screen/search-box';\nimport addItemFetch from './add-item-screen/add-item-fetch';\nimport './stylesheets/add-item-screen.css';\n\nclass AddItemScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            location:'current',\n            image: 'https://unsplash.com/photos/_0aKQa9gr4s',\n            description: ''\n        }\n    };\n\n    componentDidMount() {\n        this.props.dispatch({\n            type: 'UPDATE_ITEM_ID',\n            itemId: ''\n        });\n    };\n\n    render() {\n        let updateItemId = (id) => {\n            this.props.dispatch({\n                type: 'UPDATE_ITEM_ID',\n                itemId: id\n            });\n            this.props.history.push(`/submit-success`);\n        };\n\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className='screen form-screen'>\n                    <form \n                    className='add-item-form'\n                    onSubmit={event => {\n                        event.preventDefault();\n                        addItemFetch(this.state, this.props, updateItemId);\n                    }}>\n                        <p className='form-title'>Hide New Item</p>\n                        <div className='form-section'>\n                            <p className='form-section-title'>Title</p>\n                            <input \n                                className='input-box'\n                                type='text'\n                                required\n                                value={this.state.title}\n                                onChange={event => {\n                                    this.setState({title: event.target.value})\n                                }}\n                            />\n                        </div>\n                        <div className='form-section'>\n                            <p className='form-section-title'>Location</p>\n                            <select \n                                className='input-box'\n                                value={this.state.location}\n                                onChange={event => {\n                                    this.setState({location:event.target.value})\n                                }}>\n                                <option value='current'>Use Current Location</option>\n                                <option value='search'>Search By Location</option>\n                            </select>\n                            {this.state.location === 'current' ? <p></p> : <SearchBox />}\n                        </div>\n                        <div className='form-section'>\n                        <p className='form-section-title'>Image</p>\n                            <input className='input-box' type=\"file\" />\n                        </div>\n                        <div className='form-section'>\n                            <p className='form-section-title'>Description</p>\n                            <textarea \n                                className='input-box description-box'\n                                value={this.state.description}\n                                onChange={event => {\n                                    this.setState({description: event.target.value})\n                                }}\n                            />\n                        </div>\n                        <div className='form-section'>\n                            <button type='submit' className='form-button'>Submit</button>\n                        </div>\n                        \n                    </form>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};\n\nexport default connect(\n    state => ({lat: state.lat, lng: state.lng})\n)(AddItemScreen);","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\n\nlet ItemDetailsScreen = () =>\n    <div className=\"full-screen\">\n        <Header />\n        <div className=\"screen\">\n            <h3>Title</h3>\n            <p>Item Location</p>\n            <p>Image</p>\n            <p>Description/hints</p>\n        </div>\n        <Footer />\n    </div>\n\nexport default ItemDetailsScreen;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nlet ItemDescriptionButton = (props) => \n    <Link to={`/items/${props.id}`}>\n        <button className='form-button'>View Item Description</button>\n    </Link>\n    \n\nexport default ItemDescriptionButton;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from './header';\nimport Footer from './footer';\nimport ItemDescriptionButton from './item-description-button';\nimport './stylesheets/add-item-screen.css';\n\nclass SubmissionSuccessfulScreen extends React.Component {\n    constructor(props) {\n        super(props);\n    };\n    render() {\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen form-screen success-image-background\">\n                    <div className='add-item-form'>\n                        <p className='form-title'>Thank You!!!</p>\n                        <div className='form-section'>\n                            <p className='form-text'>Thank you very much for adding some joy into the world!</p>\n                            <p className='form-text'>Your item id is:</p>\n                            <div className='input-box id-box'>\n                                <p className='id-text'>{this.props.itemId}</p>\n                            </div>\n                        </div>\n                        <div className='form-section'>\n                            <p className='form-text'>Please include this id when hiding your item of joy so that others can let us know when they have found the item!</p>\n                            <ItemDescriptionButton id={this.props.itemId}/>\n                        </div>\n                        <div className='form-section'>\n                            <div className='form-btns-container'>\n                                <Link to='/add'><button className='form-button'>Add Joy</button></Link>\n                                <Link to='/search'><button className='form-button'>Find Joy</button></Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};  \n\nexport default connect(\n    state => ({itemId: state.itemId})\n)(SubmissionSuccessfulScreen);","let foundItemFetch = (item, updateItemId) => {\n    fetch(process.env.REACT_APP_API_URL + '/items/' + item.id, {\n        method: 'PUT',\n        body: JSON.stringify({ id: item.id, found: true }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    })\n    .then(() => {\n        updateItemId(item.id);\n        console.log('Database has been updated!');\n    }) \n};\n\nexport default foundItemFetch;","import foundItemFetch from './found-item-fetch';\n\nlet findItemFetch = (id, invalidId, clearMessage, updateItemId) => {\n    fetch(process.env.REACT_APP_API_URL + '/items/' + id)\n    .then(res => res.json())\n    .then(data => {\n        if (data.data === 'Error') {\n            invalidId();\n        }\n        else {\n            clearMessage();\n            foundItemFetch(data.data, updateItemId);\n        }\n    });\n};\n\nexport default findItemFetch;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './header';\nimport Footer from './footer';\nimport findItemFetch from './find-item-fetch';\nimport './stylesheets/found-items-screen.css';\n\nclass FoundItemsScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            id: '',\n            message: ''\n        }\n    }\n\n    render() {\n        let invalidId = () => {\n            this.setState({ id: '' });\n            this.setState({ message: 'Invalid id' });\n        };\n\n        let clearMessage = () =>\n            this.setState({ message: '' });\n\n        let updateItemId = (id) => {\n            this.props.dispatch({\n                type: 'UPDATE_ITEM_ID',\n                itemId: id\n            });\n            this.props.history.push(`/found-success`);\n        };\n\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen found-items-image-background\">\n                    <form \n                        className=\"add-item-form\"\n                        onSubmit={event => {\n                            event.preventDefault();\n                            findItemFetch(this.state.id, invalidId, clearMessage, updateItemId);\n                    }}>\n                        <p className='form-title'>Did you find some joy? <i className=\"far fa-smile-wink\"></i></p>\n                        <p className='form-text'>Wooo! That's super awesome!</p>\n                        <p className='form-text'>To mark your piece of joy as found, find the id attached to your joy and enter it below.</p>\n                        <div className='form-section'>\n                            <p className='form-section-title'>Enter joy id:</p>\n                            <div className='search-id-form-section'>\n                                <input \n                                    className='input-box id-box'\n                                    type='text'\n                                    value={this.state.id}\n                                    onChange={event => {\n                                        this.setState({id: event.target.value})\n                                    }} \n                                />\n                                <button \n                                    className='form-button search-items-button' \n                                    type=\"submit\">Found!\n                                </button>\n                                <p>{this.state.message}</p>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};\n\nexport default connect(\n    state => ({ itemId: state.itemId })\n)(FoundItemsScreen);","let updateCommentFetch = (comment, id, updateCommentSubmitted) =>\n    fetch(process.env.REACT_APP_API_URL + '/items/' + id + '/comment', {\n        method: 'PUT',\n        body: JSON.stringify({ id: id, comment: comment }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    })\n    .then(() => updateCommentSubmitted())\n\nexport default updateCommentFetch;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from './header';\nimport Footer from './footer';\nimport updateCommentFetch from './update-comment-fetch';\nimport './stylesheets/add-item-screen.css';\n\nclass FoundSuccessfulScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: '',\n            commentSubmitted: false\n        };\n    };\n\n    render() {\n        let updateCommentSubmitted = () => \n            this.setState({ commentSubmitted: true });\n\n        return (\n            <div className=\"full-screen\">\n                <Header />\n                <div className=\"screen form-screen success-image-background\">\n                    <form \n                        className='add-item-form'\n                        onSubmit={event => {\n                            event.preventDefault();\n                            updateCommentFetch(this.state.comment, this.props.itemId, updateCommentSubmitted);\n                        }}>\n                        <p className='form-title'>Joy Found!!!</p>\n                        <div className='form-section'>\n                            <p className='form-text'>Yay! You found some joy! Thank you for being awesomely you! <i className=\"far fa-grin-beam\" />\n                            </p>\n                        </div>\n                        {this.state.commentSubmitted\n                        ? <p>Comment Submitted</p>\n                        :<div className='form-section-change'>\n                            <div className='form-section'>\n                                <p className='form-section-title'>Share your story! (Optional)</p>\n                                <textarea \n                                    className='input-box description-box'\n                                    placeholder=''\n                                    value={this.state.comment}\n                                    onChange={event => {\n                                        this.setState({comment: event.target.value})\n                                    }} \n                                />\n                            </div>\n                            <div className='form-section'>\n                                <button type='submit' className='form-button'>Submit</button>\n                            </div>\n                        </div>\n                        }\n                        <div className='form-section'>\n                            <div className='form-btns-container'>\n                                <Link to='/add'><button className='form-button'>Add Joy</button></Link>\n                                <Link to='/search'><button className='form-button'>Find Joy</button></Link>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <Footer />\n            </div>\n        )\n    };\n};\n\nexport default connect(\n    state => ({ itemId: state.itemId })\n)(FoundSuccessfulScreen);","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\n\nlet NotFoundScreen = () =>\n    <div className=\"full-screen\">\n        <Header />\n        <div className=\"screen\">\n            <h1>404: Not Found! :(</h1>\n        </div>\n        <Footer />\n    </div>\n\nexport default NotFoundScreen;","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport HomeScreen from './home-screen';\nimport AboutScreen from './about-screen';\nimport SearchMapScreen from './search-map-screen';\nimport AddItemScreen from './add-item-screen';\nimport ItemDetailsScreen from './item-details-screen';\nimport SubmissionSuccessfulScreen from './submission-successful-screen';\nimport FoundItemsScreen from './found-items-screen';\nimport FoundSuccessfulScreen from './found-successful-screen';\nimport NotFoundScreen from './not-found-screen';\n\nlet Router = () =>\n    <HashRouter>\n        <div className=\"full-screen\">\n            <Switch>\n                <Route exact path=\"/\" component={HomeScreen} />\n                <Route exact path='/about' component={AboutScreen} />\n                <Route exact path=\"/search\" component={SearchMapScreen} />\n                <Route exact path=\"/add\" component={AddItemScreen} />\n                <Route exact path=\"/items/:id\" component={ItemDetailsScreen} />\n                <Route exact path=\"/submit-success\" component ={SubmissionSuccessfulScreen} />\n                <Route exact path=\"/found\" component={FoundItemsScreen} />\n                <Route exact path=\"/found-success\" component={FoundSuccessfulScreen} />\n                <Route path=\"*\" component={NotFoundScreen} />\n            </Switch>\n        </div>\n    </HashRouter>\n\nexport default Router;","let updateLocation = (oldState, action) => {\n    let lat = action.location.lat;\n    let lng = action.location.lng;\n    return {...oldState, lat, lng}\n};\n\nlet updateItemId = (oldState, action) => ({...oldState, itemId: action.itemId});\n\nlet updateItems = (oldState, action) => ({...oldState, items: action.items});\n\nlet reducers = {\n    'UPDATE_LOCATION': updateLocation,\n    'UPDATE_ITEM_ID': updateItemId,\n    'UPDATE_ITEMS': updateItems\n};\n\nlet reducer = (oldState, action) => {\n    let doer = reducers[action.type];\n    return doer ? doer(oldState, action) : oldState;\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nlet initialState = {\n    lat: 33.7490,\n    lng: -84.3880,\n    items:[],\n    currentLocation: {lat:'',lng:''},\n    itemId: ''\n};\n\nlet store = createStore(\n    reducer,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\nwindow.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './router';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nlet app = <Provider store={store}>\n    <Router />\n</Provider>\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}